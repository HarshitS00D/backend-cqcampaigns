{"version":3,"sources":["utils/static_vars.js","config/axios.js","actions/index.js","actions/sessionActions.js","containers/Login/index.jsx","components/AppHeader/HeaderContent.jsx","components/AppHeader/index.jsx","components/SideNav/navOptions.js","components/SideNav/SideNav.jsx","actions/subscriberActions.js","actions/listActions.js","components/ListComponents/UpsertList.jsx","containers/List/CreateList.jsx","utils/moment.js","components/defaultSearchComponent.jsx","components/ListComponents/ManageListTable.jsx","containers/List/ManageList.jsx","components/ListComponents/SubscribersTable.jsx","containers/List/Subscribers.jsx","components/quill.js","actions/templateActions.js","components/Templates/TemplateFormFields.jsx","components/Templates/TemplateForm.jsx","containers/Templates/CreateTemplate.jsx","components/Templates/TemplateTable.jsx","containers/Templates/ManageTemplates.jsx","actions/campaignActions.js","components/Campaigns/CampaignForm.jsx","containers/Campaigns/CreateCampaign.jsx","components/Campaigns/CampaignTable.jsx","components/Campaigns/Analytics.jsx","actions/analyticsActions.js","containers/Campaigns/ManageCampaign.jsx","containers/Campaigns/CampaignDetail.jsx","utils/bcrypt.js","actions/AccountActions.js","components/Accounts/CreateUserForm.jsx","containers/Accounts/CreateUser.jsx","components/Accounts/DeleteUserForm.jsx","components/Accounts/ChangePasswordModal.jsx","components/Accounts/UserTable.jsx","containers/Accounts/ManageUsers.jsx","components/Settings/SettingsForm.jsx","actions/settingsActions.js","containers/Settings/index.jsx","containers/Dashboard/Dashboard.jsx","containers/Content.jsx","containers/Home/index.jsx","App.jsx","reducers/sessionReducer.js","reducers/userListsReducer.js","reducers/subscribersReducer.js","reducers/templatesReducer.js","reducers/campaignsReducer.js","reducers/settingsReducer.js","reducers/analyticsReducer.js","reducers/usersReducer.js","reducers/index.js","config/store.js","index.js"],"names":["regularExpressions","emailValidator","RegExp","passwordValidator","apiUrl","window","location","protocol","hostname","feedbackStatusMapping","feedbackStatusColorMapping","rolesMapping","Admin","User","rolesArray","URL","axios","create","baseURL","LOGOUT","LOGIN","FETCH_USER_LISTS","CLEAR_USER_LISTS","FETCH_SUBSCRIBERS","CLEAR_SUBSCRIBERS","FETCH_TEMPLATES","CLEAR_TEMPLATES","FETCH_CAMPAIGNS","CLEAR_CAMPAIGNS","FETCH_SETTINGS","CLEAR_SETTINGS","FETCH_ANALYTICS","CLEAR_ANALYTICS","FETCH_USERS","CLEAR_USERS","createSession","params","dispatch","a","email","password","remember","changeLoadingState","onError","token","localStorage","getItem","sessionStorage","type","post","response","result","data","interceptors","request","use","config","headers","authorization","error","Promise","reject","setItem","payload","removeItem","connect","ownprops","session","props","Form","useForm","form","React","useState","isLoading","onFormSubmit","setFields","name","field","errors","onChange","el","setFieldsValue","target","id","value","trim","className","initialValues","onFinish","spinning","indicator","LoadingOutlined","spin","tip","size","Item","validateTrigger","rules","required","message","pattern","prefix","UserOutlined","placeholder","Password","LockOutlined","valuePropName","noStyle","htmlType","Header","useDispatch","user","useSelector","state","overlay","onClick","to","placement","arrow","firstName","style","position","zIndex","height","width","display","justifyContent","alignItems","padding","backgroundImage","HeaderContent","rootSubmenuKeys","subMenuKeyMapping","dashboard","link","lists","manage","templates","campaigns","users","settings","getInitiallyOpenKey","pathname","paths","split","filter","length","keys","initialSubKey","initialKey","Sider","Layout","renderOption","option","title","withRouter","setInitialKeys","useEffect","role","openKeys","setOpenKeys","theme","mode","defaultSelectedKeys","onOpenChange","latestOpenKey","find","key","indexOf","icon","DashboardOutlined","UnorderedListOutlined","subOptions","FormOutlined","MailOutlined","TeamOutlined","SettingOutlined","map","item","SubMenu","_","omit","fetchSubscribers","args","pagination","filters","listID","callback","get","console","log","fetchSubscribersCSV","subIDs","onSuccess","Error","_id","$in","select","feedback","createdAt","updatedAt","subscribed","fetchUserLists","editUserList","update","patch","$push","createUserList","listName","tableData","clearUserLists","fileList","setFileList","setTableData","tableColumn","setTableColumn","setIsLoading","values","hideModal","warn","success","faultyRecords","resetFields","onFileRemove","match","subscribers","Dragger","action","info","slice","status","file","columnConfig","Object","startCase","dataIndex","onRemove","InboxOutlined","scroll","x","columns","dataSource","defaultPageSize","CreateList","subTitle","parseTimeStamp","timeStamp","format","moment","getDiffInMilliseconds","timeStamp1","timeStamp2","duration","diff","asMilliseconds","defaultSearchComponent","_this","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","clearSearchFilters","ref","node","searchInput","e","onPressEnter","handleSearch","marginBottom","SearchOutlined","handleSearchReset","filterIcon","filtered","color","searchText","undefined","fontSize","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","EditableContext","createContext","EditableRow","index","component","Provider","EditableCell","editable","children","handleSave","restProps","editing","setEditing","inputRef","useRef","useContext","current","focus","toggleEdit","save","validateFields","childNode","margin","onBlur","marginLeft","EditableTable","sortedInfo","selectedRowKeys","onLoading","pageSize","pageNo","componentDidMount","dispatchFetchUserLists","componentWillUnmount","componentDidUpdate","prevProps","prevState","isEqual","pageDetails","skip","limit","setState","handleChange","sorter","$regex","$options","onSelectedRowsDelete","deleteUserLists","listIDs","err","onSelectChange","row","findIndex","$set","onPaginationChange","this","total","rowSelection","hasSelected","components","body","cell","b","sortOrder","columnKey","order","ellipsis","render","val","col","onCell","disabled","danger","y","rowClassName","showSizeChanger","pageSizeOptions","loading","Component","ownProps","userLists","delete","ManageList","ManageListTable","SubscribersTable","dispatchFetchSubscribers","clearSubscribers","generateColumnConfig","obj","fixed","text","filteredValue","filterMultiple","filterKeys","reduce","deleteSubscribers","exportToCSV","listname","csv","csvFile","Blob","downloadLink","document","createElement","download","url","createObjectURL","href","click","revokeObjectURL","showModal","isModalVisible","DownloadOutlined","UploadOutlined","background","tableLayout","onCancel","footer","onBack","history","goBack","defaultModules","toolbar","script","header","direction","align","list","indent","defaultFormats","Quill","readOnly","read","modules","formats","fetchTemplates","createTemplate","editTemplate","templateID","clearTemplates","bodyType","analytics","templateName","htmlBody","subject","fromEmail","fromName","setBodyType","templateValues","removedAnalytics","setRemovedAnalytics","templateFormValues","pick","generateTemplateFormValues","setInitialTemplateValues","setInitialFormValues","flex","label","Group","buttonStyle","getFieldValue","push","Button","initialFormValues","content","delta","source","editor","htmltext","getHTML","getText","TextArea","minHeight","warning","res","layout","marginTop","TemplateTable","campaignID","$eq","dispatchFetchTemplates","deleteTemplates","templateIDs","EditTwoTone","ManageTemplates","fetchCampaigns","sendEmails","clearCampaigns","campaign","templateOptions","setTemplateOptions","listOptions","setListOptions","initialTemplateValues","selectedTemplate","setSelectedTemplate","selectedList","setSelectedList","Array","isArray","options","template","onFieldsBlur","getTemplateValuesFromForm","prevData","editCampaign","createCampaign","onSelect","notFoundContent","filterOption","suffix","DownOutlined","CreateCampaign","CampaignsTable","dispatchFetchCampaigns","deleteCampaigns","campaignIDs","splice","sent","delivered","bounced","open","months","getChartdata","userAnalyticsData","visited","forEach","monthNo","i","Analytics","groupBy","autoFit","shape","point","ManageCampaign","CampaignTable","CampaignDetail","isCampaignLoading","setIsCampaignLoading","isTemplateLoading","setIsTemplateLoading","isListLoading","setIsListLoading","isSendEmailsLoading","setIsSendEmailsLoading","isSendTestEmailLoading","setIsSendTestEmailLoading","testModalVisible","setTestModalVisible","testEmail","setTestEmail","fetchTemplatesCallback","fetchUserListsCallback","fetchCampaignsCallback","TestMailModal","test","onSendTestEmail","destroyOnClose","closable","MailTwoTone","allowClear","renderTemplateTitle","Link","contentEditable","dangerouslySetInnerHTML","__html","bcrypt","require","hashCrypt","genSalt","salt","hash","createUser","getUsers","editUser","userID","deleteUsers","buttonLayout","wrapperCol","xs","offset","sm","md","lg","CreateUserForm","isFormLoading","setIsFormLoading","hashedPassword","hasFeedback","dependencies","validator","rule","resolve","CreateUser","DeleteUserForm","setEmail","requiredMark","emails","onInputChange","ChangePasswordModal","ChangePasswordModalVisible","changeParentState","LockTwoTone","UserTable","dispatchFetchUsers","clearUsers","onChangePasswordClick","onRoleChange","newVal","defaultValue","Option","ManageUsers","Text","Typography","SettingsForm","getUserSettings","changeUserSettings","MailjetUsername","MailjetPassword","Settings","Dashboard","Content","exact","path","Subscribers","CreateTemplate","Home","sessionReducer","userListsReducer","subscribersListReducer","templatesReducer","campaignsReducer","settingsReducer","analyticsReducer","userReducer","combineReducers","subscribersReducer","usersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","createStore","reducers","applyMiddleware","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.f0fa6f48.chunk.js","sourcesContent":["export const regularExpressions = {\r\n  emailValidator: new RegExp(\r\n    /[a-zA-Z0-9._-]{1,}@[a-zA-Z0-9._-]{1,}[.]{1}[a-zA-Z0-9._-]{1,}/\r\n  ),\r\n  passwordValidator: new RegExp(/^.{4,}$/),\r\n};\r\n\r\nexport const ports = {\r\n  serverPort: \"3001\",\r\n  reactPort: \"3000\",\r\n};\r\n\r\nexport const apiUrl = `${window.location.protocol}//${\r\n  window.location.hostname\r\n}${window.location.hostname === \"localhost\" ? \":\" + ports.serverPort : \"\"}`;\r\n\r\nexport const feedbackStatusMapping = [\r\n  \"Unconfirmed\",\r\n  \"Complaint\",\r\n  \"Bounce:Permanent\",\r\n  \"Bounce:Transient\",\r\n  \"Bounce:Undertermined\",\r\n];\r\n\r\nexport const feedbackStatusColorMapping = [\r\n  \"default\",\r\n  \"error\",\r\n  \"warning\",\r\n  \"processing\",\r\n  \"success\",\r\n];\r\n\r\nexport const roles = [\r\n  { label: \"Super Admin\", value: 0 },\r\n  { label: \"Admin\", value: 1 },\r\n  { label: \"User\", value: 2 },\r\n];\r\n\r\nexport const rolesMapping = { \"Super Admin\": 0, Admin: 1, User: 2 };\r\n\r\nexport const rolesArray = [\"Super Admin\", \"Admin\", \"User\"];\r\n","import axios from \"axios\";\r\nimport { apiUrl } from \"../utils/static_vars\";\r\n\r\nconst URL = apiUrl;\r\n\r\nexport default axios.create({\r\n  baseURL: URL,\r\n});\r\n","export const LOGOUT = \"LOGOUT\";\r\nexport const LOGIN = \"LOGIN\";\r\n\r\nexport const FETCH_USER_LISTS = \"FETCH_USER_LISTS\";\r\nexport const CLEAR_USER_LISTS = \"CLEAR_USER_LISTS\";\r\n\r\nexport const FETCH_SUBSCRIBERS = \"FETCH_SUBSCRIBERS\";\r\nexport const CLEAR_SUBSCRIBERS = \"CLEAR_SUBSCRIBERS\";\r\n\r\nexport const FETCH_TEMPLATES = \"FETCH_TEMPLATES\";\r\nexport const CLEAR_TEMPLATES = \"CLEAR_TEMPLATES\";\r\n\r\nexport const FETCH_CAMPAIGNS = \"FETCH_CAMPAIGNS\";\r\nexport const CLEAR_CAMPAIGNS = \"CLEAR_CAMPAIGNS\";\r\n\r\nexport const FETCH_SETTINGS = \"FETCH_SETTINGS\";\r\nexport const CLEAR_SETTINGS = \"CLEAR_SETTINGS\";\r\n\r\nexport const FETCH_ANALYTICS = \"FETCH_ANALYTICS\";\r\nexport const CLEAR_ANALYTICS = \"CLEAR_ANALYTICS\";\r\n\r\nexport const FETCH_USERS = \"FETCH_USERS\";\r\nexport const CLEAR_USERS = \"CLEAR_USERS\";\r\n","import axios from \"../config/axios\";\r\n\r\nimport { LOGIN, LOGOUT } from \".\";\r\n\r\nexport const destroySession = () => ({ type: LOGOUT });\r\n\r\nexport const createSession = (params = {}) => async (dispatch) => {\r\n  const { email, password, remember, changeLoadingState, onError } = params;\r\n  try {\r\n    const token =\r\n      localStorage.getItem(\"token\") || sessionStorage.getItem(\"token\");\r\n    if (!token && !email && !password) return dispatch({ type: LOGOUT });\r\n\r\n    changeLoadingState && changeLoadingState(true);\r\n\r\n    const response = await axios.post(`/auth/login`, {\r\n      email,\r\n      password,\r\n      token,\r\n    });\r\n\r\n    const result = response.data;\r\n\r\n    axios.interceptors.request.use(\r\n      (config) => {\r\n        if (!config.headers.authorization && result.token)\r\n          config.headers.authorization = result.token;\r\n        return config;\r\n      },\r\n      (error) => Promise.reject(error)\r\n    );\r\n\r\n    changeLoadingState && changeLoadingState(false);\r\n    sessionStorage.setItem(\"token\", result.token);\r\n    if (remember) localStorage.setItem(\"token\", result.token);\r\n\r\n    dispatch({ type: LOGIN, payload: result });\r\n  } catch (err) {\r\n    changeLoadingState && changeLoadingState(false);\r\n    localStorage.removeItem(\"token\");\r\n    sessionStorage.removeItem(\"token\");\r\n    onError(err.response);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button, Input, Checkbox, Spin } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { UserOutlined, LockOutlined, LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport { regularExpressions } from \"../../utils/static_vars\";\r\nimport { createSession } from \"../../actions/sessionActions\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Login = (props) => {\r\n  const [form] = Form.useForm();\r\n  const [isLoading, changeLoadingState] = React.useState(false);\r\n\r\n  const onFormSubmit = async ({ email, password, remember }) => {\r\n    const { createSession } = props;\r\n\r\n    const onError = (error) => {\r\n      if (error) {\r\n        const { data } = error;\r\n\r\n        form.setFields([\r\n          {\r\n            name: data.field,\r\n            errors: [data.error],\r\n          },\r\n        ]);\r\n      }\r\n    };\r\n\r\n    createSession({\r\n      email,\r\n      password,\r\n      remember,\r\n      changeLoadingState,\r\n      onError,\r\n    });\r\n  };\r\n\r\n  const onChange = (el) =>\r\n    form.setFieldsValue({ [el.target.id]: el.target.value.trim() });\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      className=\"login-form\"\r\n      initialValues={{\r\n        email: localStorage.getItem(\"email\"),\r\n        remember: false,\r\n      }}\r\n      onFinish={onFormSubmit}\r\n    >\r\n      <Spin\r\n        spinning={isLoading}\r\n        indicator={<LoadingOutlined spin />}\r\n        tip={`Please Wait...`}\r\n        size={`large`}\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          validateTrigger=\"onBlur\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter your email!\",\r\n            },\r\n            {\r\n              pattern: regularExpressions.emailValidator,\r\n              message: \"Please enter a valid email\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            placeholder=\"Email\"\r\n            onChange={onChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please enter your Password!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={onChange}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n            <Checkbox>Remember me</Checkbox>\r\n          </Form.Item>\r\n          {/* \r\n          <Button className=\"login-form-forgot\" type=\"link\">\r\n            Forgot password\r\n          </Button> */}\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            className=\"login-form-button\"\r\n          >\r\n            Log in\r\n          </Button>\r\n        </Form.Item>\r\n      </Spin>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ session }, ownprops) => {\r\n  return { session, ...ownprops };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createSession })(Login);\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Dropdown, Menu, Button } from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { destroySession } from \"../../actions/sessionActions\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.session.user);\r\n  const onLogout = () => dispatch(destroySession());\r\n  return (\r\n    <div className=\"header-content\">\r\n      <Dropdown\r\n        overlay={\r\n          <Menu>\r\n            <Menu.Item onClick={onLogout}>\r\n              <Button type=\"primary\">\r\n                <Link to=\"/\">Logout</Link>\r\n              </Button>\r\n            </Menu.Item>\r\n          </Menu>\r\n        }\r\n        placement=\"bottomCenter\"\r\n        arrow\r\n      >\r\n        <span>\r\n          {user.firstName}\r\n          <UserOutlined />\r\n        </span>\r\n      </Dropdown>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport HeaderContent from \"./HeaderContent\";\r\n\r\nimport \"./header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Layout.Header\r\n      className=\"header\"\r\n      style={{\r\n        position: \"fixed\",\r\n        zIndex: 10,\r\n        height: \"80px\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        padding: \"0 25px\",\r\n        backgroundImage: \"linear-gradient(to-right,#DE6834,#FFE7D4,#565CB0)\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div className=\"logo\">\r\n          <span>CQ </span> Campaigns\r\n        </div>\r\n      </div>\r\n      <HeaderContent />\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import {\r\n  DashboardOutlined,\r\n  UnorderedListOutlined,\r\n  FormOutlined,\r\n  MailOutlined,\r\n  TeamOutlined,\r\n  SettingOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nexport const getNavOptions = (role) => {\r\n  const options = [\r\n    {\r\n      link: \"/\",\r\n      title: \"Dashboard\",\r\n      icon: <DashboardOutlined />,\r\n      key: 1,\r\n    },\r\n    {\r\n      title: \"Lists\",\r\n      icon: <UnorderedListOutlined />,\r\n      key: \"sub1\",\r\n      link: \"/lists\",\r\n      subOptions: [\r\n        {\r\n          link: \"/lists/create\",\r\n          title: \"Create List\",\r\n          key: 2,\r\n        },\r\n        {\r\n          link: \"/lists\",\r\n          title: \"Manage Lists\",\r\n          key: 3,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Templates\",\r\n      icon: <FormOutlined />,\r\n      key: \"sub2\",\r\n      link: \"/templates\",\r\n      subOptions: [\r\n        {\r\n          link: \"/templates/create\",\r\n          title: \"Create Template\",\r\n          key: 4,\r\n        },\r\n        {\r\n          link: \"/templates\",\r\n          title: \"Manage Templates\",\r\n          key: 5,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Campaigns\",\r\n      icon: <MailOutlined />,\r\n      key: \"sub3\",\r\n      link: \"/campaigns\",\r\n      subOptions: [\r\n        {\r\n          link: \"/campaigns/create\",\r\n          title: \"Create Campaign\",\r\n          key: 6,\r\n        },\r\n        {\r\n          link: \"/campaigns\",\r\n          title: \"Manage Campaigns\",\r\n          key: 7,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      title: \"Accounts\",\r\n      icon: <TeamOutlined />,\r\n      key: \"sub4\",\r\n      link: \"/users\",\r\n      subOptions: [\r\n        {\r\n          link: \"/users/create\",\r\n          title: \"Create new account \",\r\n          key: 8,\r\n        },\r\n        {\r\n          link: \"/users\",\r\n          title: role < 1 ? \"Users List\" : \"Delete account\",\r\n          key: 9,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      link: \"/settings\",\r\n      title: \"Settings\",\r\n      icon: <SettingOutlined />,\r\n      key: 10,\r\n    },\r\n  ];\r\n\r\n  return options.filter((el) => (role > 1 ? el.link !== `/users` : true));\r\n};\r\n\r\nexport const rootSubmenuKeys = [\"sub1\", \"sub2\", \"sub3\", \"sub4\"];\r\n\r\nconst subMenuKeyMapping = {\r\n  dashboard: { link: \"1\" },\r\n  lists: { link: \"sub1\", create: \"2\", manage: \"3\" },\r\n  templates: { link: \"sub2\", create: \"4\", manage: \"5\" },\r\n  campaigns: { link: \"sub3\", create: \"6\", manage: \"7\" },\r\n  users: { link: \"sub4\", create: \"8\", manage: \"9\" },\r\n  settings: { link: \"10\" },\r\n};\r\n\r\nexport const getInitiallyOpenKey = (pathname) => {\r\n  if (pathname === \"/\") return {};\r\n  const paths = pathname.split(\"/\").filter((el) => el.length > 0);\r\n  const keys = {};\r\n\r\n  keys.initialSubKey = subMenuKeyMapping[paths[0]].link;\r\n\r\n  switch (paths[0]) {\r\n    case \"dashboard\":\r\n    case \"settings\":\r\n      keys.initialKey = subMenuKeyMapping[paths[0]].link;\r\n      break;\r\n    default:\r\n      keys.initialKey =\r\n        paths[1] !== \"create\"\r\n          ? subMenuKeyMapping[paths[0]].manage\r\n          : subMenuKeyMapping[paths[0]].create;\r\n  }\r\n\r\n  return keys;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  getNavOptions,\r\n  rootSubmenuKeys,\r\n  getInitiallyOpenKey,\r\n} from \"./navOptions\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst SideNav = ({ location: { pathname } }) => {\r\n  const [{ initialKey, initialSubKey }, setInitialKeys] = React.useState(\r\n    getInitiallyOpenKey(pathname)\r\n  );\r\n  useEffect(() => {\r\n    setInitialKeys(getInitiallyOpenKey(pathname));\r\n  }, [pathname]);\r\n  const [openKeys, setOpenKeys] = React.useState([initialSubKey]);\r\n\r\n  const onOpenChange = (keys) => {\r\n    const latestOpenKey = keys.find((key) => openKeys.indexOf(key) === -1);\r\n    if (rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n      setOpenKeys(keys);\r\n    } else {\r\n      setOpenKeys(latestOpenKey ? [latestOpenKey] : []);\r\n    }\r\n  };\r\n  const user = useSelector((state) => state.session.user);\r\n\r\n  return (\r\n    <Sider>\r\n      <Menu\r\n        theme=\"dark\"\r\n        mode=\"inline\"\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"200px\",\r\n          position: \"fixed\",\r\n        }}\r\n        defaultSelectedKeys={[initialKey || \"1\"]}\r\n        openKeys={openKeys}\r\n        onOpenChange={onOpenChange}\r\n      >\r\n        {getNavOptions(user.role).map((item) =>\r\n          item.subOptions ? renderWithSubOptions(item) : renderOption(item)\r\n        )}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nfunction renderOption(option) {\r\n  return (\r\n    <Menu.Item {...option}>\r\n      <Link to={option.link}>{option.title}</Link>\r\n    </Menu.Item>\r\n  );\r\n}\r\n\r\nfunction renderWithSubOptions(option) {\r\n  return (\r\n    <Menu.SubMenu {..._.omit(option, [\"subOptions\"])}>\r\n      {option.subOptions.map((item) => renderOption(item))}\r\n    </Menu.SubMenu>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideNav);\r\n","import axios from \"../config/axios\";\r\nimport { FETCH_SUBSCRIBERS, CLEAR_SUBSCRIBERS } from \".\";\r\n\r\nexport const fetchSubscribers = (args = {}) => async (dispatch) => {\r\n  const { pagination, filters, listID, callback } = args;\r\n  //listID required\r\n  try {\r\n    const { data } = await axios.get(`/api/list/${listID}`, {\r\n      params: { filters, pagination },\r\n    });\r\n    if (callback) callback();\r\n\r\n    dispatch({ type: FETCH_SUBSCRIBERS, payload: data });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n\r\nexport const clearSubscribers = () => ({\r\n  type: CLEAR_SUBSCRIBERS,\r\n});\r\n\r\nexport const deleteSubscribers = (args = {}) => async (dispatch) => {\r\n  const { listID, subIDs, onSuccess, onError, pagination, filters } = args;\r\n  //subIDs, listID required\r\n  try {\r\n    const { data } = await axios.delete(\"/api/subscriber\", {\r\n      params: {\r\n        listID,\r\n        subIDs,\r\n      },\r\n    });\r\n\r\n    //if (onSuccess) onSuccess(data);\r\n    fetchSubscribers({\r\n      pagination,\r\n      filters,\r\n      listID,\r\n      callback: () => onSuccess(data),\r\n    })(dispatch);\r\n  } catch (error) {\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n\r\nexport const fetchSubscribersCSV = async (args = {}) => {\r\n  const { listID, subIDs = [], onSuccess, onError } = args;\r\n  // listID required\r\n  try {\r\n    if (!listID) throw new Error(\"No listID provided\");\r\n    const params = {};\r\n    if (subIDs.length)\r\n      params.filters = {\r\n        _id: { $in: subIDs },\r\n      };\r\n    params.select = {\r\n      _id: 0,\r\n      feedback: 0,\r\n      createdAt: 0,\r\n      updatedAt: 0,\r\n      subscribed: 0,\r\n    };\r\n    const { data } = await axios.get(`/api/list/${listID}/download`, {\r\n      params,\r\n    });\r\n\r\n    if (onSuccess) onSuccess(data);\r\n  } catch (error) {\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n","import axios from \"../config/axios\";\r\nimport _ from \"lodash\";\r\nimport { FETCH_USER_LISTS, CLEAR_USER_LISTS } from \".\";\r\nimport { fetchSubscribers } from \"./subscriberActions\";\r\n\r\nexport const fetchUserLists = (args = {}) => async (dispatch) => {\r\n  try {\r\n    const { callback } = args;\r\n    const { data } = await axios.get(\"/api/list/\", {\r\n      params: _.omit(args, \"callback\"),\r\n    });\r\n    if (callback) callback();\r\n    dispatch({ type: FETCH_USER_LISTS, payload: data });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n\r\nexport const deleteUserLists = (args = {}) => async (dispatch) => {\r\n  const { listIDs, select, pagination, filters, onSuccess, onError } = args;\r\n  try {\r\n    const { data } = await axios.delete(\"/api/list\", {\r\n      params: { listIDs },\r\n    });\r\n    if (onSuccess) onSuccess(data);\r\n    fetchUserLists({ select, filters, pagination })(dispatch);\r\n  } catch (error) {\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n\r\nexport const editUserList = (args = {}) => async (dispatch) => {\r\n  const { update, select, pagination, filters, onSuccess, onError } = args;\r\n  try {\r\n    const { data } = await axios.patch(\"/api/list\", update);\r\n    if (onSuccess) onSuccess(data);\r\n    //if (select && filters && pagination)\r\n    if (update.update.$push) {\r\n      fetchSubscribers({ listID: update._id, filters, pagination })(dispatch);\r\n    } else fetchUserLists({ select, filters, pagination })(dispatch);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n\r\nexport const createUserList = async (args = {}) => {\r\n  const { listName, tableData: data, onSuccess, onError } = args;\r\n  //listName, tableData required\r\n  try {\r\n    const response = await axios.post(\"/api/list/\", {\r\n      listName,\r\n      data,\r\n    });\r\n    if (onSuccess) onSuccess(response.data);\r\n  } catch (error) {\r\n    if (onError) onError(error);\r\n    console.log({ error });\r\n  }\r\n};\r\n\r\nexport const clearUserLists = () => ({ type: CLEAR_USER_LISTS });\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { Form, Input, Button, Upload, message, Table, Spin } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\n\r\nimport { createUserList, editUserList } from \"../../actions/listActions\";\r\nimport { apiUrl } from \"../../utils/static_vars\";\r\n\r\nimport \"./Lists.css\";\r\n\r\nconst UpsertList = (props) => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [tableColumn, setTableColumn] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n\r\n  const token = useSelector((state) => state.session.token);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = async (values) => {\r\n    setIsLoading(true);\r\n    const onSuccess = (data) => {\r\n      if (props.hideModal) {\r\n        props.hideModal();\r\n      }\r\n      setIsLoading(false);\r\n      message[data.warn ? \"warn\" : \"success\"](data.success || data.warn);\r\n      if (data.faultyRecords && data.faultyRecords.length !== 0) {\r\n        message.error(`${data.faultyRecords.length} Faulty record(s)`);\r\n      }\r\n      form.resetFields();\r\n      onFileRemove();\r\n    };\r\n    const onError = (error) => {\r\n      setIsLoading(false);\r\n      console.log(\"onError\", error);\r\n      message.error(error.response.data.error);\r\n    };\r\n\r\n    if (props.match.params.id) {\r\n      const update = {\r\n        _id: props.match.params.id,\r\n        update: { $push: { subscribers: tableData } },\r\n      };\r\n      dispatch(\r\n        editUserList({\r\n          update,\r\n          onSuccess,\r\n          onError,\r\n          pagination: props.pagination,\r\n        })\r\n      );\r\n    } else {\r\n      createUserList({\r\n        listName: values.listName,\r\n        tableData,\r\n        onSuccess,\r\n        onError,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (info) => {\r\n    let fileList = [...info.fileList];\r\n\r\n    fileList = fileList.slice(-1);\r\n    setFileList(fileList);\r\n\r\n    const status = info.file.status;\r\n    if (status !== \"uploading\") {\r\n    }\r\n    if (status === \"done\") {\r\n      if (typeof info.file.response === \"string\")\r\n        return message.error(info.file.response);\r\n\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n      const columnConfig = Object.keys(\r\n        _.omit(info.file.response[0], \"key\")\r\n      ).map((key) => ({\r\n        title: _.startCase(key),\r\n        key,\r\n        dataIndex: key,\r\n      }));\r\n      setTableColumn(columnConfig);\r\n      setTableData(info.file.response);\r\n    } else if (status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  };\r\n\r\n  const onFileRemove = () => {\r\n    setFileList([]);\r\n    setTableColumn([]);\r\n    setTableData([]);\r\n  };\r\n\r\n  return (\r\n    <Spin spinning={isLoading} tip=\"Loading...\" size=\"large\">\r\n      <Form\r\n        form={form}\r\n        className=\"create-list-form\"\r\n        size=\"large\"\r\n        onFinish={onFormSubmit}\r\n      >\r\n        {!props.match.params.id && (\r\n          <Form.Item\r\n            name=\"listName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter list name\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Enter List Name\"></Input>\r\n          </Form.Item>\r\n        )}\r\n        <Form.Item\r\n          name=\"dragger\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please Upload a file\",\r\n            },\r\n          ]}\r\n        >\r\n          <Upload.Dragger\r\n            name=\"file\"\r\n            headers={{ authorization: token }}\r\n            action={`${apiUrl}/api/list/upload`}\r\n            onChange={handleFileChange}\r\n            fileList={fileList}\r\n            onRemove={onFileRemove}\r\n          >\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <InboxOutlined />\r\n            </p>\r\n            <h2>Import CSV</h2>\r\n            <p className=\"ant-upload-text\">\r\n              Please ensure the first row of the CSV file contains column names.\r\n              This row must contain an email header.\r\n            </p>\r\n            <p className=\"ant-upload-hint\">\r\n              Click or drag file to this area to upload\r\n            </p>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n        {tableData.length ? (\r\n          <>\r\n            <Table\r\n              scroll={{ x: true }}\r\n              columns={tableColumn}\r\n              dataSource={tableData}\r\n              pagination={{ defaultPageSize: 5 }}\r\n            />\r\n            <Form.Item>\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form.Item>\r\n          </>\r\n        ) : null}\r\n      </Form>\r\n    </Spin>\r\n  );\r\n};\r\n\r\nexport default withRouter(UpsertList);\r\n","import React from \"react\";\r\nimport { PageHeader, Divider } from \"antd\";\r\n\r\nimport UpsertList from \"../../components/ListComponents/UpsertList\";\r\n\r\nconst CreateList = (props) => {\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Create Lists\"\r\n        subTitle=\"Create your lists here\"\r\n      />\r\n      <Divider />\r\n      <UpsertList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import moment from \"moment\";\r\n\r\nexport const parseTimeStamp = (timeStamp, format) =>\r\n  moment(timeStamp).format(format);\r\n\r\nexport const parseMilliseconds = (timeStamp, format) =>\r\n  moment(timeStamp, \"x\").format(format);\r\n\r\nexport const getDiffInMilliseconds = (timeStamp1, timeStamp2) =>\r\n  moment.duration(moment(timeStamp1).diff(moment(timeStamp2))).asMilliseconds();\r\n","import React from \"react\";\r\nimport { Input, Button } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\n\r\nconst defaultSearchComponent = (_this, dataIndex) => ({\r\n  filterDropdown: ({\r\n    setSelectedKeys,\r\n    selectedKeys,\r\n    confirm,\r\n    clearFilters,\r\n  }) => {\r\n    _this.clearSearchFilters = clearFilters;\r\n    return (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            _this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            _this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => _this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          icon={<SearchOutlined />}\r\n          size=\"small\"\r\n          style={{ width: 90 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          onClick={() => _this.handleSearchReset(clearFilters)}\r\n          size=\"small\"\r\n          style={{ width: 90 }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    );\r\n  },\r\n  filterIcon: (filtered) => (\r\n    <SearchOutlined\r\n      style={{\r\n        color: _this.state.searchText ? \"#1890ff\" : undefined,\r\n        fontSize: \"1rem\",\r\n      }}\r\n    />\r\n  ),\r\n  onFilter: (value, record) =>\r\n    record[dataIndex]\r\n      ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n      : \"\",\r\n  onFilterDropdownVisibleChange: (visible) => {\r\n    if (visible) {\r\n      setTimeout(() => _this.searchInput.select(), 100);\r\n    }\r\n  },\r\n});\r\n\r\nexport default defaultSearchComponent;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Table, Input, Button, Form, message, Tooltip } from \"antd\";\r\nimport { UnorderedListOutlined } from \"@ant-design/icons\";\r\n\r\nimport { parseTimeStamp, getDiffInMilliseconds } from \"../../utils/moment\";\r\nimport defaultSearchComponent from \"../defaultSearchComponent\";\r\n\r\nimport \"./table.css\";\r\n\r\nimport {\r\n  fetchUserLists,\r\n  deleteUserLists,\r\n  editUserList,\r\n  clearUserLists,\r\n} from \"../../actions/listActions\";\r\n\r\nconst EditableContext = React.createContext(null);\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({\r\n  title,\r\n  editable,\r\n  children,\r\n  dataIndex,\r\n  record,\r\n  handleSave,\r\n  ...restProps\r\n}) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const form = useContext(EditableContext);\r\n\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log(\"Save failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div className=\"table-list-name-col\">\r\n        <div className=\"editable-cell-value-wrap\" onClick={toggleEdit}>\r\n          {children}\r\n        </div>\r\n        <Link to={`/lists/${record._id}`} className=\"link\">\r\n          <Tooltip placement=\"left\" title=\"view\" color=\"blue\">\r\n            <UnorderedListOutlined\r\n              title=\"view list\"\r\n              style={{ fontSize: \"1.3rem\", marginLeft: \"10px\" }}\r\n            />\r\n          </Tooltip>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass EditableTable extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    sortedInfo: {},\r\n    selectedRowKeys: [],\r\n    onLoading: false,\r\n    filters: {},\r\n    pageSize: 5,\r\n    pageNo: 1,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.dispatchFetchUserLists();\r\n  };\r\n\r\n  componentWillUnmount = () => this.props.clearUserLists();\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    const { pageSize, pageNo, filters } = this.state;\r\n    if (\r\n      !_.isEqual(\r\n        { pageSize, pageNo, ...filters },\r\n        {\r\n          pageSize: prevState.pageSize,\r\n          pageNo: prevState.pageNo,\r\n          ...prevState.filters,\r\n        }\r\n      )\r\n    ) {\r\n      this.dispatchFetchUserLists();\r\n    }\r\n  };\r\n\r\n  dispatchFetchUserLists = (pageDetails) => {\r\n    const { pageSize, pageNo } = pageDetails || this.state;\r\n    const { filters } = this.state;\r\n    const pagination = { skip: (pageNo - 1) * pageSize, limit: pageSize };\r\n    const select = [\"name\", \"createdAt\", \"updatedAt\", \"total\"];\r\n    this.setState({ onLoading: true });\r\n    const callback = () => {\r\n      this.setState({ onLoading: false });\r\n    };\r\n    this.props.fetchUserLists({ select, filters, pagination, callback });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  // Functions for Search Component\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    // confirm();\r\n\r\n    if (selectedKeys[0])\r\n      this.setState({\r\n        filters: {\r\n          name: {\r\n            $regex: selectedKeys[0],\r\n            $options: \"$i\",\r\n          },\r\n        },\r\n      });\r\n\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n    });\r\n  };\r\n\r\n  handleSearchReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\", filters: {} });\r\n  };\r\n\r\n  //selectedRowKeys functions\r\n  onSelectedRowsDelete = async () => {\r\n    const { selectedRowKeys, pageSize, pageNo } = this.state;\r\n    const { tableData, deleteUserLists } = this.props;\r\n\r\n    const listIDs = selectedRowKeys.map((index) => tableData[index - 1][\"_id\"]);\r\n\r\n    this.setState({ onLoading: true });\r\n\r\n    const select = [\"name\", \"createdAt\", \"updatedAt\", \"total\"];\r\n\r\n    const onSuccess = (data) => {\r\n      const state = { onLoading: false, selectedRowKeys: [] };\r\n      if (selectedRowKeys.length === tableData.length)\r\n        state.pageNo = pageNo > 1 ? pageNo - 1 : 1;\r\n\r\n      this.setState(state);\r\n\r\n      message.success(data);\r\n    };\r\n    const onError = (err) => {\r\n      this.setState({ onLoading: false });\r\n      message.error(err.response.data.error);\r\n      console.log({ err });\r\n    };\r\n\r\n    const skip =\r\n      ((selectedRowKeys.length === tableData.length\r\n        ? pageNo > 1\r\n          ? pageNo - 1\r\n          : 1\r\n        : pageNo) -\r\n        1) *\r\n      pageSize;\r\n\r\n    const pagination = { skip, limit: pageSize };\r\n    deleteUserLists({ select, listIDs, onSuccess, onError, pagination });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => this.setState({ selectedRowKeys });\r\n\r\n  handleSave = (row) => {\r\n    const { editUserList, tableData } = this.props;\r\n\r\n    if (_.findIndex(tableData, { _id: row._id, name: row.name }) !== -1) return;\r\n\r\n    this.setState({ onLoading: true });\r\n\r\n    const select = [\"name\", \"createdAt\", \"updatedAt\", \"total\"];\r\n    const onSuccess = (data) => {\r\n      this.setState({ onLoading: false });\r\n      message.success(data);\r\n    };\r\n    const onError = (err) => {\r\n      this.setState({ onLoading: false });\r\n      message.error(err.response.data.error);\r\n      console.log({ err });\r\n    };\r\n    const update = {\r\n      _id: row._id,\r\n      update: {\r\n        $set: { name: row.name },\r\n      },\r\n    };\r\n    const { pageSize, pageNo } = this.state;\r\n    const pagination = { skip: (pageNo - 1) * pageSize, limit: pageSize };\r\n    editUserList({ update, select, pagination, onSuccess, onError });\r\n  };\r\n\r\n  onPaginationChange = (pageNo, pageSize) => {\r\n    this.setState({ pageSize, pageNo });\r\n  };\r\n\r\n  render() {\r\n    const { sortedInfo, selectedRowKeys, onLoading, pageNo } = this.state;\r\n    const { tableData, total } = this.props;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columnConfig = [\r\n      {\r\n        title: \"List Name\",\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        editable: true,\r\n        ...defaultSearchComponent(this, \"name\"),\r\n      },\r\n      {\r\n        title: \"Total\",\r\n        key: \"total\",\r\n        dataIndex: \"total\",\r\n        sorter: (a, b) => a.total - b.total,\r\n        sortOrder: sortedInfo.columnKey === \"total\" && sortedInfo.order,\r\n        ellipsis: true,\r\n      },\r\n      {\r\n        title: \"Created At\",\r\n        key: \"createdAt\",\r\n        dataIndex: \"createdAt\",\r\n        render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n        sorter: (a, b) => getDiffInMilliseconds(a.createdAt, b.createdAt),\r\n\r\n        sortOrder: sortedInfo.columnKey === \"createdAt\" && sortedInfo.order,\r\n        ellipsis: true,\r\n      },\r\n      {\r\n        title: \"Updated At\",\r\n        key: \"updatedAt\",\r\n        dataIndex: \"updatedAt\",\r\n        render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n        sorter: (a, b) => getDiffInMilliseconds(a.updatedAt, b.updatedAt),\r\n        sortOrder: sortedInfo.columnKey === \"updatedAt\" && sortedInfo.order,\r\n        ellipsis: true,\r\n      },\r\n    ];\r\n\r\n    const columns = columnConfig.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.onSelectedRowsDelete}\r\n              disabled={!hasSelected}\r\n              danger\r\n            >\r\n              Delete\r\n            </Button>\r\n            <span style={{ marginLeft: 8 }}>\r\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : \"\"}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => this.handleSearchReset(this.clearSearchFilters)}\r\n            >\r\n              Clear Filters\r\n            </Button>\r\n            <Button onClick={() => this.setState({ sortedInfo: {} })}>\r\n              Clear Sorters\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <Table\r\n          scroll={{ x: true, y: 600 }}\r\n          rowClassName={() => \"editable-row\"}\r\n          components={components}\r\n          rowSelection={rowSelection}\r\n          dataSource={tableData}\r\n          columns={columns}\r\n          pagination={{\r\n            showSizeChanger: true,\r\n            onChange: this.onPaginationChange,\r\n            total,\r\n            pageSizeOptions: [5, 10, 20, 50],\r\n            defaultPageSize: 5,\r\n            current: pageNo,\r\n          }}\r\n          onChange={this.handleChange}\r\n          loading={onLoading}\r\n        ></Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ userLists }, ownProps) => ({\r\n  ...ownProps,\r\n  tableData: userLists.data,\r\n  total: userLists.total,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchUserLists,\r\n  clearUserLists,\r\n  deleteUserLists,\r\n  editUserList,\r\n})(EditableTable);\r\n","import React from \"react\";\r\nimport { PageHeader, Divider } from \"antd\";\r\n\r\nimport ManageListTable from \"../../components/ListComponents/ManageListTable\";\r\n\r\nclass ManageList extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <PageHeader\r\n          className=\"site-page-header\"\r\n          title=\"Manage Lists\"\r\n          subTitle=\"Edit or Delete your Lists here\"\r\n        />\r\n        <Divider />\r\n        <ManageListTable />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ManageList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { Table, Button, message, Tag } from \"antd\";\r\nimport { DownloadOutlined, UploadOutlined } from \"@ant-design/icons\";\r\n\r\nimport defaultSearchComponent from \"../defaultSearchComponent\";\r\nimport {\r\n  fetchSubscribers,\r\n  clearSubscribers,\r\n  deleteSubscribers,\r\n  fetchSubscribersCSV,\r\n} from \"../../actions/subscriberActions\";\r\nimport UpsertList from \"./UpsertList\";\r\nimport { parseTimeStamp, getDiffInMilliseconds } from \"../../utils/moment\";\r\nimport {\r\n  feedbackStatusMapping,\r\n  feedbackStatusColorMapping,\r\n} from \"../../utils/static_vars\";\r\nimport Modal from \"antd/lib/modal/Modal\";\r\n\r\nclass SubscribersTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchText: \"\",\r\n      sortedInfo: {},\r\n      selectedRowKeys: [],\r\n      isModalVisible: false,\r\n      onLoading: false,\r\n      filters: {},\r\n      pageSize: 5,\r\n      pageNo: 1,\r\n      columns: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.dispatchFetchSubscribers();\r\n  };\r\n\r\n  componentWillUnmount = () => this.props.clearSubscribers();\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    let { pageSize, pageNo, filters, searchText } = this.state;\r\n    const { tableData } = this.props;\r\n\r\n    if (!prevProps.tableData && tableData) {\r\n      this.generateColumnConfig();\r\n    }\r\n\r\n    if (\r\n      !_.isEqual(\r\n        { pageSize, pageNo, ...filters, searchText },\r\n        {\r\n          pageSize: prevState.pageSize,\r\n          pageNo: prevState.pageNo,\r\n          searchText: prevState.searchText,\r\n          ...prevState.filters,\r\n        }\r\n      )\r\n    ) {\r\n      this.generateColumnConfig();\r\n      this.dispatchFetchSubscribers();\r\n    }\r\n  };\r\n\r\n  generateColumnConfig = () => {\r\n    let { filters, sortedInfo } = this.state;\r\n    const { tableData } = this.props;\r\n    if (!tableData || !tableData.length) return;\r\n    let columnsConfig = [\r\n      ...Object.keys(\r\n        _.omit(tableData[0], [\"key\", \"_id\", \"subscribed\", \"feedback\"])\r\n      ),\r\n      \"subscribed\",\r\n      \"feedback\",\r\n    ].map((key) => {\r\n      let obj = {\r\n        title: _.startCase(key),\r\n        key,\r\n        dataIndex: key,\r\n        width: \"10vw\",\r\n      };\r\n      switch (key) {\r\n        case \"name\":\r\n          return { ...obj, ...defaultSearchComponent(this, \"name\") };\r\n        case \"createdAt\":\r\n          return {\r\n            ...obj,\r\n            render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n            sorter: (a, b) => getDiffInMilliseconds(a.createdAt, b.createdAt),\r\n            sortOrder: sortedInfo.columnKey === \"createdAt\" && sortedInfo.order,\r\n            ellipsis: true,\r\n          };\r\n        case \"updatedAt\":\r\n          return {\r\n            ...obj,\r\n            render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n            sorter: (a, b) => getDiffInMilliseconds(a.updatedAt, b.updatedAt),\r\n            sortOrder: sortedInfo.columnKey === \"updatedAt\" && sortedInfo.order,\r\n            ellipsis: true,\r\n          };\r\n        case \"subscribed\":\r\n          return {\r\n            ...obj,\r\n            fixed: \"right\",\r\n            filters: [\r\n              { text: \"Subscribed\", value: true },\r\n              { text: \"Unsubscribed\", value: false },\r\n            ],\r\n            filteredValue: filters[key] || null,\r\n            filterMultiple: false,\r\n            render: (val) =>\r\n              val ? (\r\n                <Tag color=\"success\">Subscribed</Tag>\r\n              ) : (\r\n                <Tag color=\"error\">Unsubscribed</Tag>\r\n              ),\r\n          };\r\n        case \"feedback\":\r\n          return {\r\n            ...obj,\r\n            fixed: \"right\",\r\n            filteredValue: filters[key] || null,\r\n            filters: feedbackStatusMapping.map((text, value) => ({\r\n              text,\r\n              value,\r\n            })),\r\n            render: (val) => (\r\n              <Tag color={feedbackStatusColorMapping[val]}>\r\n                {feedbackStatusMapping[val]}\r\n              </Tag>\r\n            ),\r\n          };\r\n        default:\r\n          return obj;\r\n      }\r\n    });\r\n    return columnsConfig;\r\n  };\r\n\r\n  dispatchFetchSubscribers = (pageDetails) => {\r\n    const { pageSize, pageNo, searchText } = pageDetails\r\n      ? pageDetails\r\n      : this.state;\r\n    let { filters } = this.state;\r\n\r\n    const filterKeys = Object.keys(filters).filter(\r\n      (key) => filters[key] && filters[key].length\r\n    );\r\n    filters = filterKeys.length\r\n      ? filterKeys.reduce((obj, value) => {\r\n          obj[value] = { $in: filters[value] };\r\n          return obj;\r\n        }, {})\r\n      : {};\r\n    filters = {\r\n      ...filters,\r\n      name: {\r\n        $regex: searchText,\r\n        $options: \"$i\",\r\n      },\r\n    };\r\n\r\n    const pagination = { skip: (pageNo - 1) * pageSize, limit: pageSize };\r\n    const listID = this.props.match.params.id;\r\n    this.setState({ onLoading: true });\r\n\r\n    const callback = () => {\r\n      this.setState({ onLoading: false });\r\n    };\r\n    this.props.fetchSubscribers({ filters, pagination, listID, callback });\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n      filters,\r\n    });\r\n  };\r\n\r\n  // Functions for Search Component\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    // confirm();\r\n    if (selectedKeys[0]) {\r\n      this.setState({\r\n        searchText: selectedKeys[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSearchReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\", filters: {} });\r\n  };\r\n\r\n  onSelectedRowsDelete = async () => {\r\n    const { selectedRowKeys, pageSize, pageNo, filters } = this.state;\r\n    const { tableData, deleteSubscribers } = this.props;\r\n\r\n    const listID = this.props.match.params.id;\r\n    const subIDs = selectedRowKeys.map((index) => tableData[index - 1][\"_id\"]);\r\n\r\n    this.setState({ onLoading: true });\r\n\r\n    const onSuccess = (data) => {\r\n      const state = { onLoading: false, selectedRowKeys: [] };\r\n      if (selectedRowKeys.length === tableData.length)\r\n        state.pageNo = pageNo > 1 ? pageNo - 1 : 1;\r\n\r\n      this.setState(state);\r\n      message.success(data);\r\n    };\r\n    const onError = (err) => {\r\n      this.setState({ onLoading: false });\r\n      message.error(err.response.data.error);\r\n      console.log({ err });\r\n    };\r\n    const skip =\r\n      ((selectedRowKeys.length === tableData.length\r\n        ? pageNo > 1\r\n          ? pageNo - 1\r\n          : 1\r\n        : pageNo) -\r\n        1) *\r\n      pageSize;\r\n    const pagination = { skip, limit: pageSize };\r\n    deleteSubscribers({\r\n      listID,\r\n      subIDs,\r\n      onSuccess,\r\n      onError,\r\n      pagination,\r\n      filters,\r\n    });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => this.setState({ selectedRowKeys });\r\n\r\n  onPaginationChange = (pageNo, pageSize) => {\r\n    this.setState({ pageSize, pageNo });\r\n  };\r\n\r\n  exportToCSV = async () => {\r\n    const listID = this.props.match.params.id;\r\n    const { tableData } = this.props;\r\n    const { selectedRowKeys } = this.state;\r\n    const subIDs = selectedRowKeys.map((key) => tableData[key - 1]._id);\r\n    await fetchSubscribersCSV({\r\n      listID,\r\n      subIDs,\r\n      onSuccess: ({ listname, csv }) => {\r\n        let csvFile = new Blob([csv], { type: \"text/csv\" });\r\n        let downloadLink = document.createElement(\"a\");\r\n        downloadLink.download = `${listname}.csv`;\r\n        const url = window.URL.createObjectURL(csvFile);\r\n        downloadLink.href = url;\r\n        downloadLink.click();\r\n        window.URL.revokeObjectURL(url);\r\n      },\r\n      onError: (err) => message.error(err.message),\r\n    });\r\n    this.setState({ selectedRowKeys: [] });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({ isModalVisible: true });\r\n  };\r\n\r\n  hideModal = () => {\r\n    this.setState({ isModalVisible: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedRowKeys,\r\n      onLoading,\r\n      isModalVisible,\r\n      pageNo,\r\n      pageSize,\r\n    } = this.state;\r\n    const { tableData, total } = this.props;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = this.generateColumnConfig();\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.onSelectedRowsDelete}\r\n              disabled={!hasSelected}\r\n              danger\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<DownloadOutlined />}\r\n              style={{ marginLeft: \"8px\" }}\r\n              onClick={this.exportToCSV}\r\n            >\r\n              Export To CSV\r\n            </Button>\r\n            <Button\r\n              icon={<UploadOutlined />}\r\n              style={{\r\n                color: \"white\",\r\n                background: \"#52c41a\",\r\n                marginLeft: \"8px\",\r\n              }}\r\n              onClick={this.showModal}\r\n            >\r\n              Import CSV\r\n            </Button>\r\n            <span style={{ marginLeft: \"8px\" }}>\r\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : \"\"}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => this.handleSearchReset(this.clearSearchFilters)}\r\n            >\r\n              Clear Filters\r\n            </Button>\r\n            <Button onClick={() => this.setState({ sortedInfo: {} })}>\r\n              Clear Sorters\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table\r\n          scroll={{ x: true, y: 600 }}\r\n          dataSource={tableData}\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          tableLayout=\"auto\"\r\n          pagination={{\r\n            showSizeChanger: true,\r\n            onChange: this.onPaginationChange,\r\n            total,\r\n            pageSizeOptions: [5, 10, 20, 50],\r\n            defaultPageSize: 5,\r\n            current: pageNo,\r\n          }}\r\n          onChange={this.handleChange}\r\n          loading={onLoading}\r\n        />\r\n        <Modal\r\n          title=\"Import CSV\"\r\n          visible={isModalVisible}\r\n          width=\"70vw\"\r\n          onCancel={this.hideModal}\r\n          footer={null}\r\n        >\r\n          <UpsertList\r\n            hideModal={this.hideModal}\r\n            pagination={{ skip: (pageNo - 1) * pageSize, limit: pageSize }}\r\n          />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ subscribers }, ownProps) => {\r\n  return {\r\n    ...ownProps,\r\n    tableData: subscribers.data,\r\n    total: subscribers.total,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchSubscribers,\r\n  deleteSubscribers,\r\n  clearSubscribers,\r\n})(withRouter(SubscribersTable));\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { PageHeader, Divider } from \"antd\";\r\n\r\nimport SubscribersTable from \"../../components/ListComponents/SubscribersTable\";\r\n\r\nconst Subscribers = (props) => {\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Subscribers Table\"\r\n        subTitle=\"Manage your subscribers here\"\r\n        onBack={() => props.history.goBack()}\r\n      />\r\n      <Divider />\r\n      <SubscribersTable />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Subscribers);\r\n","import ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nconst defaultModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n    [\"blockquote\", \"code-block\"],\r\n    [{ script: \"sub\" }, { script: \"super\" }],\r\n    [{ header: [1, 2, 3, 4, false] }],\r\n    [{ direction: \"rtl\" }, { align: [] }],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [{ color: [] }, { background: [] }],\r\n    [\"link\", \"clean\"],\r\n  ],\r\n};\r\n\r\nconst defaultFormats = [\r\n  \"header\",\r\n  \"size\",\r\n  \"script\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"code-block\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n  \"color\",\r\n  \"background\",\r\n  \"font\",\r\n  \"align\",\r\n  \"direction\",\r\n];\r\n\r\nexport default class Quill extends Component {\r\n  render() {\r\n    return (\r\n      <ReactQuill\r\n        value={this.props.value || \"\"}\r\n        className={this.props.className || \"\"}\r\n        placeholder={this.props.placeholder || \"\"}\r\n        readOnly={this.props.read}\r\n        theme={this.props.theme}\r\n        onChange={this.props.onChange} // onChange(content, delta, source, editor)\r\n        style={this.props.style || undefined}\r\n        modules={this.props.modules || defaultModules}\r\n        formats={this.props.formats || defaultFormats}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import axios from \"../config/axios\";\r\nimport _ from \"lodash\";\r\n\r\nimport { FETCH_TEMPLATES, CLEAR_TEMPLATES } from \"./index\";\r\n\r\nexport const fetchTemplates = (args = {}) => async (dispatch) => {\r\n  const { callback } = args;\r\n  try {\r\n    const { data } = await axios.get(`/api/template/`, {\r\n      params: _.omit(args, \"callback\"),\r\n    });\r\n\r\n    if (callback) callback();\r\n    dispatch({ type: FETCH_TEMPLATES, payload: data });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n\r\nexport const createTemplate = (args = {}) => async () => {\r\n  const { data, onSuccess, onError } = args;\r\n  try {\r\n    const response = await axios.post(\"/api/template/\", data);\r\n    if (onSuccess) onSuccess(response.data);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error.response.data);\r\n  }\r\n};\r\n\r\nexport const editTemplate = (args = {}) => async () => {\r\n  const { templateID, data, onSuccess, onError } = args;\r\n  try {\r\n    const response = await axios.patch(`/api/template/${templateID}`, data);\r\n    if (onSuccess) onSuccess(response.data);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error.response.data);\r\n  }\r\n};\r\n\r\nexport const deleteTemplates = (args = {}) => async (dispatch) => {\r\n  const { templateIDs, pagination, filters, onSuccess, onError } = args;\r\n  try {\r\n    const { data } = await axios.delete(\"/api/template\", {\r\n      params: { templateIDs },\r\n    });\r\n\r\n    if (onSuccess) onSuccess(data);\r\n    fetchTemplates({ filters, pagination })(dispatch);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n\r\nexport const clearTemplates = () => ({ type: CLEAR_TEMPLATES });\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Form, Row, Col, Input, Radio, Checkbox } from \"antd\";\r\nimport _ from \"lodash\";\r\n\r\nimport Quill from \"../quill\";\r\nimport { fetchTemplates, clearTemplates } from \"../../actions/templateActions\";\r\n\r\nconst initialValues = {\r\n  bodyType: 0,\r\n  analytics: [],\r\n  templateName: null,\r\n  body: null,\r\n  htmlBody: null,\r\n  subject: null,\r\n  fromEmail: null,\r\n  fromName: null,\r\n};\r\n\r\nconst TemplateFormFields = (props) => {\r\n  const templateID = props.templateID || props.match.params.id;\r\n  const { form } = props;\r\n  const dispatch = useDispatch();\r\n  const [bodyType, setBodyType] = useState(initialValues.bodyType);\r\n  const templateValues = useSelector(\r\n    (state) =>\r\n      templateID &&\r\n      state.templates.data &&\r\n      state.templates.data.filter((el) => el._id === templateID)[0]\r\n  );\r\n  const [removedAnalytics, setRemovedAnalytics] = useState([]);\r\n  useEffect(() => {\r\n    if (templateID && !templateValues) {\r\n      dispatch(fetchTemplates());\r\n    } //else form.setFieldsValue(initialValues);\r\n  }, [templateID, dispatch, form, templateValues]);\r\n\r\n  useEffect(() => {\r\n    const templateFormValues = generateTemplateFormValues(\r\n      templateValues || initialValues\r\n    );\r\n    if (props.setInitialTemplateValues)\r\n      props.setInitialTemplateValues(templateFormValues);\r\n    //console.log(templateFormValues);\r\n    if (props.setInitialFormValues) {\r\n      props.setInitialFormValues(templateFormValues);\r\n    }\r\n    setBodyType(templateFormValues.bodyType);\r\n    form.setFieldsValue(templateFormValues);\r\n  }, [templateValues, form]);\r\n\r\n  useEffect(() => () => dispatch(clearTemplates()), [dispatch]);\r\n\r\n  const onBodyTypeChange = (e) => {\r\n    setBodyType(e.target.value);\r\n    if (form) {\r\n      let analytics = form.getFieldValue(\"analytics\") || [];\r\n      switch (e.target.value) {\r\n        case 0:\r\n          if (analytics.includes(0)) removedAnalytics.push(0);\r\n          if (analytics.includes(1)) removedAnalytics.push(1);\r\n          setRemovedAnalytics(removedAnalytics);\r\n          analytics = analytics.filter((el) => el !== 0 && el !== 1);\r\n          break;\r\n        case 1:\r\n          analytics = [...analytics, ...removedAnalytics];\r\n          setRemovedAnalytics([]);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      form.setFieldsValue({ analytics });\r\n    }\r\n  };\r\n\r\n  const onEditorChange = (content, delta, source, editor) => {\r\n    const htmltext = editor.getHTML(),\r\n      text = editor.getText();\r\n    if (text.length) {\r\n      form.setFieldsValue({ htmlBody: htmltext });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col flex={\"50%\"} style={{ padding: \"0.5rem 1rem 0 0\" }}>\r\n          <h2>Template Details</h2>\r\n          <Form.Item\r\n            name=\"templateName\"\r\n            label=\"Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter template name\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Enter Template Name\"></Input>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col flex={\"50%\"} style={{ padding: \"0.5rem 0 0 1rem\" }}>\r\n          <h2>Analytics</h2>\r\n          <Form.Item name=\"analytics\">\r\n            <Checkbox.Group>\r\n              <Checkbox value={0} disabled={bodyType !== 1}>\r\n                Insert tracking pixel. Available for HTML emails only.\r\n              </Checkbox>\r\n              <br />\r\n              <Checkbox value={1} disabled={bodyType !== 1}>\r\n                {`Track link clickthroughs, syntax: {linklabel/http://mylinktotrack.com}. Available for HTML emails only`}\r\n              </Checkbox>\r\n              <br />\r\n              <Checkbox value={2}>Add unsubscribe link</Checkbox>\r\n            </Checkbox.Group>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <h2>E-mail Details</h2>\r\n      <Row>\r\n        <Col flex={1}>\r\n          <Form.Item\r\n            name=\"fromEmail\"\r\n            label=\"From E-mail\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter From E-mail\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input type=\"email\" placeholder=\"Enter From E-mail\"></Input>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col flex={1}>\r\n          <Form.Item\r\n            style={{ marginLeft: \"1rem\" }}\r\n            name=\"fromName\"\r\n            label=\"From Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter From Name\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Enter From Name\"></Input>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <h2>Create email</h2>\r\n      <Row>\r\n        <Col>\r\n          <Form.Item\r\n            name=\"bodyType\"\r\n            label=\"Type\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Radio.Group buttonStyle=\"solid\" onChange={onBodyTypeChange}>\r\n              <Radio.Button value={0}>Plain Text</Radio.Button>\r\n              <Radio.Button value={1}>HTML</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <Form.Item\r\n            style={{ marginLeft: \"1.5rem\" }}\r\n            name=\"subject\"\r\n            label=\"Subject\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter a Subject\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Enter Subject\"></Input>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      <Form.Item\r\n        name={bodyType === 1 ? \"htmlBody\" : \"body\"}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"E-mail Body is required\",\r\n          },\r\n        ]}\r\n      >\r\n        {bodyType === 1 ? (\r\n          <Quill\r\n            theme=\"snow\"\r\n            value={(props.initialFormValues || initialValues).htmlBody}\r\n            placeholder=\"E-mail Body\"\r\n            onChange={onEditorChange}\r\n            style={{ background: \"white\" }}\r\n          />\r\n        ) : (\r\n          <Input.TextArea\r\n            style={{\r\n              minHeight: \"30vh\",\r\n            }}\r\n            placeholder=\"E-mail Body\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction generateTemplateFormValues(record) {\r\n  return record\r\n    ? {\r\n        ..._.pick(record, [\r\n          \"analytics\",\r\n          \"fromEmail\",\r\n          \"fromName\",\r\n          \"bodyType\",\r\n          \"subject\",\r\n        ]),\r\n        [record.bodyType === 1 ? \"htmlBody\" : \"body\"]: record.body,\r\n        templateName: record.name,\r\n      }\r\n    : undefined;\r\n}\r\n\r\nexport default withRouter(TemplateFormFields);\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport _ from \"lodash\";\r\nimport { Form, Button, message } from \"antd\";\r\n\r\nimport TemplateFormFields from \"./TemplateFormFields\";\r\nimport { createTemplate, editTemplate } from \"../../actions/templateActions\";\r\n\r\nconst initialValues = {\r\n  bodyType: 0,\r\n  analytics: [],\r\n  templateName: null,\r\n  body: null,\r\n  htmlBody: null,\r\n  subject: null,\r\n  fromEmail: null,\r\n  fromName: null,\r\n};\r\n\r\nconst TemplateForm = (props) => {\r\n  const templateID = /* props.templateID ||*/ props.match.params.id;\r\n  const [form] = Form.useForm();\r\n  const [initialFormValues, setInitialFormValues] = useState(\r\n    props.initialFormValues || initialValues\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!templateID) form.setFieldsValue(initialValues);\r\n  }, [form, templateID]);\r\n\r\n  const onSubmit = (data) => {\r\n    // console.log({ initialFormValues, data });\r\n    if (_.isEqual(initialFormValues, data)) {\r\n      message.warning(\"No changes made\", 1);\r\n      return props.history.goBack();\r\n    }\r\n\r\n    const body = data.htmlBody;\r\n    delete data.htmlBody;\r\n    if (body) data.body = body;\r\n    const templateName = data.templateName;\r\n    delete data.templateName;\r\n    data.name = templateName;\r\n\r\n    const onSuccess = (res) => {\r\n      message.success(res, 1);\r\n      form.resetFields();\r\n      setInitialFormValues({\r\n        bodyType: 0,\r\n        analytics: [],\r\n      });\r\n      return props.history.goBack();\r\n    };\r\n    const onError = (err) => message.error(\"Some Error Occured\", 1);\r\n    dispatch(\r\n      (templateID ? editTemplate : createTemplate)({\r\n        data,\r\n        templateID,\r\n        onSuccess,\r\n        onError,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      onFinish={onSubmit}\r\n      initialValues={initialFormValues}\r\n      layout=\"vertical\"\r\n    >\r\n      <TemplateFormFields\r\n        form={form}\r\n        templateID={templateID}\r\n        setInitialTemplateValues={setInitialFormValues}\r\n      />\r\n      <Button type=\"primary\" htmlType=\"Submit\" style={{ marginTop: \"2rem\" }}>\r\n        {props.match.params.id ? `Update ` : `Create `} Template\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(TemplateForm);\r\n","import { PageHeader, Divider } from \"antd\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport TemplateForm from \"../../components/Templates/TemplateForm\";\r\nconst CreateTemplate = (props) => {\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Create Template\"\r\n        subTitle=\"Create or Edit your templates here\"\r\n        onBack={() => props.history.goBack()}\r\n      />\r\n      <Divider />\r\n      <TemplateForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateTemplate);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Table, Button, message, Tooltip } from \"antd\";\r\nimport { EditTwoTone } from \"@ant-design/icons\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  fetchTemplates,\r\n  deleteTemplates,\r\n  clearTemplates,\r\n} from \"../../actions/templateActions\";\r\nimport { getDiffInMilliseconds, parseTimeStamp } from \"../../utils/moment\";\r\nimport defaultSearchComponent from \"../../components/defaultSearchComponent\";\r\n\r\nimport \"./table.css\";\r\n\r\nclass TemplateTable extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    sortedInfo: {},\r\n    selectedRowKeys: [],\r\n    onLoading: false,\r\n    filters: { campaignID: { $eq: null } },\r\n    pageSize: 10,\r\n    pageNo: 1,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.dispatchFetchTemplates();\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    const { pageSize, pageNo, searchText } = this.state;\r\n    if (\r\n      !_.isEqual(\r\n        { pageSize, pageNo, searchText },\r\n        {\r\n          pageSize: prevState.pageSize,\r\n          pageNo: prevState.pageNo,\r\n          searchText: prevState.searchText,\r\n        }\r\n      )\r\n    ) {\r\n      this.dispatchFetchTemplates();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => this.props.clearTemplates();\r\n\r\n  dispatchFetchTemplates = (pageDetails) => {\r\n    const { pageSize, pageNo } = pageDetails ? pageDetails : this.state;\r\n    let { filters, searchText } = this.state;\r\n    if (searchText && searchText.length)\r\n      filters.name = {\r\n        $regex: searchText,\r\n        $options: \"$i\",\r\n      };\r\n\r\n    const pagination = { skip: (pageNo - 1) * pageSize, limit: pageSize };\r\n    this.setState({ onLoading: true });\r\n\r\n    const callback = () => {\r\n      this.setState({ onLoading: false });\r\n    };\r\n    this.props.fetchTemplates({ filters, pagination, callback });\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    // confirm();\r\n\r\n    if (selectedKeys[0]) {\r\n      this.setState({\r\n        searchText: selectedKeys[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  handleSearchReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\", filters: { campaignID: { $eq: null } } });\r\n  };\r\n\r\n  onSelectedRowsDelete = () => {\r\n    const { selectedRowKeys, pageSize, pageNo, filters } = this.state;\r\n    const { tableData, deleteTemplates } = this.props;\r\n\r\n    const templateIDs = selectedRowKeys.map(\r\n      (index) => tableData[index - 1][\"_id\"]\r\n    );\r\n\r\n    this.setState({ onLoading: true });\r\n\r\n    const onSuccess = (data) => {\r\n      const state = { onLoading: false, selectedRowKeys: [] };\r\n      if (selectedRowKeys.length === tableData.length)\r\n        state.pageNo = pageNo > 1 ? pageNo - 1 : 1;\r\n\r\n      this.setState(state);\r\n      message.success(data);\r\n    };\r\n\r\n    const onError = (err) => {\r\n      this.setState({ onLoading: false });\r\n      message.error(err.response.data.error);\r\n      console.log({ err });\r\n    };\r\n\r\n    const skip =\r\n      ((selectedRowKeys.length === tableData.length\r\n        ? pageNo > 1\r\n          ? pageNo - 1\r\n          : 1\r\n        : pageNo) -\r\n        1) *\r\n      pageSize;\r\n\r\n    const pagination = { skip, limit: pageSize };\r\n    deleteTemplates({ templateIDs, onSuccess, onError, filters, pagination });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => this.setState({ selectedRowKeys });\r\n\r\n  onPaginationChange = (pageNo, pageSize) => {\r\n    this.setState({ pageSize, pageNo });\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys, onLoading, pageNo, sortedInfo } = this.state;\r\n    const { tableData, total } = this.props;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    const columns = [\r\n      {\r\n        title: \"Template Name\",\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        render: (text, record) => (\r\n          <span className=\"template-name\">\r\n            {record.name}\r\n            <Link to={`/templates/${record._id}`} className=\"link\">\r\n              <Tooltip placement=\"left\" title=\"Edit\" color=\"blue\">\r\n                <EditTwoTone\r\n                  title=\"Edit template\"\r\n                  style={{ fontSize: \"large\" }}\r\n                />\r\n              </Tooltip>\r\n            </Link>\r\n          </span>\r\n        ),\r\n        width: \"26%\",\r\n        ...defaultSearchComponent(this, \"name\"),\r\n      },\r\n      {\r\n        title: \"Created At\",\r\n        key: \"createdAt\",\r\n        dataIndex: \"createdAt\",\r\n        render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n        sorter: (a, b) => getDiffInMilliseconds(a.createdAt, b.createdAt),\r\n        sortOrder: sortedInfo.columnKey === \"createdAt\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        width: \"26%\",\r\n      },\r\n      {\r\n        title: \"Updated At\",\r\n        key: \"updatedAt\",\r\n        dataIndex: \"updatedAt\",\r\n        render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n        sorter: (a, b) => getDiffInMilliseconds(a.updatedAt, b.updatedAt),\r\n        sortOrder: sortedInfo.columnKey === \"updatedAt\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        width: \"26%\",\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.onSelectedRowsDelete}\r\n              disabled={!hasSelected}\r\n              danger\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <span style={{ marginLeft: \"8px\" }}>\r\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : \"\"}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => this.handleSearchReset(this.clearSearchFilters)}\r\n            >\r\n              Clear Filters\r\n            </Button>\r\n            <Button onClick={() => this.setState({ sortedInfo: {} })}>\r\n              Clear Sorters\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table\r\n          scroll={{ x: true, y: 600 }}\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          dataSource={tableData}\r\n          pagination={{\r\n            showSizeChanger: true,\r\n            onChange: this.onPaginationChange,\r\n            total,\r\n            pageSizeOptions: [5, 10, 20, 50],\r\n            defaultPageSize: 10,\r\n            current: pageNo,\r\n          }}\r\n          onChange={this.handleChange}\r\n          loading={onLoading}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ templates }, ownProps) => {\r\n  return {\r\n    ...ownProps,\r\n    tableData: templates.data,\r\n    total: templates.total,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchTemplates,\r\n  deleteTemplates,\r\n  clearTemplates,\r\n})(withRouter(TemplateTable));\r\n","import React from \"react\";\r\nimport { PageHeader, Divider } from \"antd\";\r\n\r\nimport TemplateTable from \"../../components/Templates/TemplateTable\";\r\n\r\nconst ManageTemplates = () => {\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Manage Templates\"\r\n        subTitle=\"Edit or Delete your templates here\"\r\n      />\r\n      <Divider />\r\n      <TemplateTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageTemplates;\r\n","import axios from \"../config/axios\";\r\nimport _ from \"lodash\";\r\n\r\nimport { FETCH_CAMPAIGNS, CLEAR_CAMPAIGNS } from \".\";\r\n\r\nexport const createCampaign = (args = {}) => async () => {\r\n  const { data, onSuccess, onError } = args;\r\n  try {\r\n    const response = await axios.post(\"/api/campaign/\", data);\r\n    if (onSuccess) onSuccess(response.data);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error.response.data);\r\n  }\r\n};\r\n\r\nexport const editCampaign = (args = {}) => async () => {\r\n  const { campaignID, data, onSuccess, onError } = args;\r\n  try {\r\n    const response = await axios.patch(`/api/campaign/${campaignID}`, data);\r\n    if (onSuccess) onSuccess(response.data);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error.response.data);\r\n  }\r\n};\r\n\r\nexport const deleteCampaigns = (args = {}) => async (dispatch) => {\r\n  const { campaignIDs, pagination, filters, onSuccess, onError } = args;\r\n  try {\r\n    const { data } = await axios.delete(\"/api/campaign\", {\r\n      params: { campaignIDs },\r\n    });\r\n\r\n    if (onSuccess) onSuccess(data);\r\n    fetchCampaigns({ filters, pagination })(dispatch);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n\r\nexport const fetchCampaigns = (args = {}) => async (dispatch) => {\r\n  const { callback } = args;\r\n  try {\r\n    const { data } = await axios.get(`/api/campaign/`, {\r\n      params: _.omit(args, \"callback\"),\r\n    });\r\n\r\n    if (callback) callback();\r\n    dispatch({ type: FETCH_CAMPAIGNS, payload: data });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n\r\nexport const sendEmails = (args = {}) => async (dispatch) => {\r\n  const { body, onSuccess, onError } = args;\r\n  try {\r\n    const { data } = await axios.post(`/api/campaign/sendmail`, body);\r\n\r\n    if (onSuccess) onSuccess(data);\r\n  } catch (error) {\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n\r\nexport const clearCampaigns = () => ({ type: CLEAR_CAMPAIGNS });\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AutoComplete, Form, Input, Button, message } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  fetchCampaigns,\r\n  clearCampaigns,\r\n  editCampaign,\r\n} from \"../../actions/campaignActions\";\r\nimport { fetchTemplates, clearTemplates } from \"../../actions/templateActions\";\r\nimport { fetchUserLists, clearUserLists } from \"../../actions/listActions\";\r\nimport { createCampaign } from \"../../actions/campaignActions\";\r\nimport TemplateFormFields from \"../Templates/TemplateFormFields\";\r\n\r\nconst CampaignForm = (props) => {\r\n  const campaignID = props.match.params.id;\r\n  const campaign = useSelector(\r\n    (state) =>\r\n      campaignID &&\r\n      state.campaigns.data &&\r\n      state.campaigns.data.filter((el) => el._id === campaignID)[0]\r\n  );\r\n  const templates = useSelector(\r\n    (state) =>\r\n      state.templates.data &&\r\n      state.templates.data.filter((el) => !el.campaignID)\r\n  );\r\n  const lists = useSelector((state) => state.userLists.data);\r\n  const [templateOptions, setTemplateOptions] = useState([]);\r\n  const [listOptions, setListOptions] = useState([]);\r\n  const [initialTemplateValues, setInitialTemplateValues] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const [selectedTemplate, setSelectedTemplate] = useState({});\r\n  const [selectedList, setSelectedList] = useState();\r\n\r\n  useEffect(() => {\r\n    if (campaignID) {\r\n      dispatch(fetchCampaigns({ filters: { _id: campaignID } }));\r\n    } else {\r\n      dispatch(clearCampaigns());\r\n      form.resetFields();\r\n      setSelectedList();\r\n    }\r\n\r\n    dispatch(fetchTemplates());\r\n    dispatch(fetchUserLists());\r\n\r\n    return () => {\r\n      dispatch(clearCampaigns());\r\n      dispatch(clearTemplates());\r\n      dispatch(clearUserLists());\r\n    };\r\n  }, [dispatch, campaignID, props.location.pathname, form]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(templates)) {\r\n      const options = templates.map((template, index) => ({\r\n        key: template._id,\r\n        label: template.name,\r\n        value: template.name,\r\n        index,\r\n      }));\r\n\r\n      setTemplateOptions(options);\r\n    }\r\n  }, [templates && templates.length]);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(lists)) {\r\n      const options = lists.map((list, index) => ({\r\n        key: list._id,\r\n        label: list.name,\r\n        value: list.name,\r\n        index,\r\n      }));\r\n\r\n      setListOptions(options);\r\n\r\n      if (campaign) {\r\n        const option = options.filter(\r\n          (option) => option.key === campaign.listID\r\n        );\r\n\r\n        const values = {\r\n          name: campaign.name,\r\n        };\r\n        if (option.length) {\r\n          values.selectedList = option[0].label;\r\n          setSelectedList(option[0]);\r\n        }\r\n        form.setFieldsValue(values);\r\n      }\r\n    }\r\n  }, [lists, campaign, form]);\r\n\r\n  const onFormSubmit = (values) => {\r\n    const data = {\r\n      name: values.name,\r\n      template: getTemplateValuesFromForm(values),\r\n      listID: selectedList.key,\r\n    };\r\n\r\n    const onSuccess = (data) => {\r\n      message.success(data);\r\n      form.resetFields();\r\n      props.history.goBack();\r\n    };\r\n\r\n    const onError = (error) => {\r\n      message.error(error);\r\n      console.log(error);\r\n    };\r\n\r\n    if (campaign) {\r\n      const prevData = {\r\n        name: campaign.name,\r\n        template: getTemplateValuesFromForm(initialTemplateValues),\r\n        listID: campaign.listID,\r\n      };\r\n      //console.log({ prevData, data });\r\n      if (_.isEqual(prevData, data)) return message.warn(\"No Changes made\");\r\n\r\n      data.template._id = campaign.templateID;\r\n      dispatch(\r\n        editCampaign({ campaignID: campaign._id, data, onSuccess, onError })\r\n      );\r\n    } else dispatch(createCampaign({ data, onSuccess, onError }));\r\n  };\r\n\r\n  const onFieldsBlur = () => {\r\n    let resetFields = [];\r\n    if (!selectedTemplate) resetFields.push(\"selectedTemplate\");\r\n    if (!selectedList) resetFields.push(\"selectedList\");\r\n\r\n    if (resetFields.length) form.resetFields(resetFields);\r\n  };\r\n\r\n  const getTemplateValuesFromForm = (values) => ({\r\n    ..._.pick(values, [\r\n      \"analytics\",\r\n      \"bodyType\",\r\n      \"subject\",\r\n      \"fromName\",\r\n      \"fromEmail\",\r\n    ]),\r\n    body: values.body || values.htmlBody,\r\n    name: values.templateName,\r\n  });\r\n\r\n  return (\r\n    <Form form={form} onFinish={onFormSubmit} layout=\"vertical\">\r\n      <Form.Item\r\n        name=\"name\"\r\n        label=\"Campaign Name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: \"Please Enter Campaign Name\",\r\n          },\r\n        ]}\r\n      >\r\n        <Input size=\"large\" placeholder=\"Enter Campaign Name\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"selectedList\"\r\n        label=\"Select List\"\r\n        rules={[{ required: true, message: \"Please Select a List\" }]}\r\n      >\r\n        <AutoComplete\r\n          onBlur={onFieldsBlur}\r\n          onSelect={(value, option) => setSelectedList(option)}\r\n          onChange={(value) => setSelectedList()}\r\n          notFoundContent=\"No Match\"\r\n          filterOption={true}\r\n          options={listOptions}\r\n        >\r\n          <Input\r\n            suffix={<DownOutlined />}\r\n            size=\"large\"\r\n            placeholder=\"Select List\"\r\n          />\r\n        </AutoComplete>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"selectedTemplate\" label=\"Select Template\">\r\n        <AutoComplete\r\n          onBlur={onFieldsBlur}\r\n          onSelect={(value, option) => setSelectedTemplate(option)}\r\n          onChange={(value) => setSelectedTemplate()}\r\n          filterOption={true}\r\n          options={templateOptions}\r\n          notFoundContent=\"No Match\"\r\n        >\r\n          <Input\r\n            suffix={<DownOutlined />}\r\n            size=\"large\"\r\n            placeholder=\"Select Template\"\r\n          />\r\n        </AutoComplete>\r\n      </Form.Item>\r\n\r\n      <TemplateFormFields\r\n        form={form}\r\n        setInitialTemplateValues={setInitialTemplateValues}\r\n        templateID={\r\n          (selectedTemplate && selectedTemplate.key) ||\r\n          (campaign && campaign.templateID)\r\n        }\r\n      />\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          {campaign ? \"Update\" : \"Submit\"}\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default withRouter(CampaignForm);\r\n","import React from \"react\";\r\nimport { PageHeader, Divider } from \"antd\";\r\n\r\nimport CampaignForm from \"../../components/Campaigns/CampaignForm\";\r\n\r\nconst CreateCampaign = (props) => {\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title={`${props.match.params.id ? \"Update\" : \"Create\"} Campaign`}\r\n        subTitle=\"create or edit your campaigns here\"\r\n        onBack={() => props.history.goBack()}\r\n      />\r\n      <Divider />\r\n      <CampaignForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreateCampaign;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { Table, Button, message } from \"antd\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  fetchCampaigns,\r\n  deleteCampaigns,\r\n  clearCampaigns,\r\n} from \"../../actions/campaignActions\";\r\nimport { getDiffInMilliseconds, parseTimeStamp } from \"../../utils/moment\";\r\nimport defaultSearchComponent from \"../defaultSearchComponent\";\r\n\r\nimport \"./table.css\";\r\n\r\nclass CampaignsTable extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    sortedInfo: {},\r\n    selectedRowKeys: [],\r\n    onLoading: false,\r\n    filters: {},\r\n    pageSize: 5,\r\n    pageNo: 1,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.dispatchFetchCampaigns();\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    const { pageSize, pageNo, searchText } = this.state;\r\n    if (\r\n      !_.isEqual(\r\n        { pageSize, pageNo, searchText },\r\n        {\r\n          pageSize: prevState.pageSize,\r\n          pageNo: prevState.pageNo,\r\n          searchText: prevState.searchText,\r\n        }\r\n      )\r\n    ) {\r\n      this.dispatchFetchCampaigns();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => this.props.clearCampaigns();\r\n\r\n  dispatchFetchCampaigns = (pageDetails) => {\r\n    const { pageSize, pageNo } = pageDetails ? pageDetails : this.state;\r\n    let { filters, searchText } = this.state;\r\n    if (searchText && searchText.length)\r\n      filters.name = {\r\n        $regex: searchText,\r\n        $options: \"$i\",\r\n      };\r\n\r\n    const pagination = { skip: (pageNo - 1) * pageSize, limit: pageSize };\r\n    this.setState({ onLoading: true });\r\n\r\n    const callback = () => {\r\n      this.setState({ onLoading: false });\r\n    };\r\n    this.props.fetchCampaigns({ filters, pagination, callback });\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    // confirm();\r\n\r\n    if (selectedKeys[0]) {\r\n      this.setState({\r\n        searchText: selectedKeys[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  handleSearchReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\", filters: {} });\r\n  };\r\n\r\n  onSelectedRowsDelete = () => {\r\n    const { selectedRowKeys, pageSize, pageNo, filters } = this.state;\r\n    const { tableData, deleteCampaigns } = this.props;\r\n\r\n    const campaignIDs = selectedRowKeys.map(\r\n      (index) => tableData[index - 1][\"_id\"]\r\n    );\r\n\r\n    this.setState({ onLoading: true });\r\n\r\n    const onSuccess = (data) => {\r\n      const state = { onLoading: false, selectedRowKeys: [] };\r\n      if (selectedRowKeys.length === tableData.length)\r\n        state.pageNo = pageNo > 1 ? pageNo - 1 : 1;\r\n\r\n      this.setState(state);\r\n      message.success(data);\r\n    };\r\n\r\n    const onError = (err) => {\r\n      this.setState({ onLoading: false });\r\n      message.error(err.response.data.error);\r\n      console.log({ err });\r\n    };\r\n\r\n    const skip =\r\n      ((selectedRowKeys.length === tableData.length\r\n        ? pageNo > 1\r\n          ? pageNo - 1\r\n          : 1\r\n        : pageNo) -\r\n        1) *\r\n      pageSize;\r\n\r\n    const pagination = { skip, limit: pageSize };\r\n    deleteCampaigns({ campaignIDs, onSuccess, onError, filters, pagination });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => this.setState({ selectedRowKeys });\r\n\r\n  onPaginationChange = (pageNo, pageSize) => {\r\n    this.setState({ pageSize, pageNo });\r\n  };\r\n\r\n  render() {\r\n    const { selectedRowKeys, onLoading, pageNo, sortedInfo } = this.state;\r\n    const { tableData, total } = this.props;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    let columns = [\r\n      {\r\n        title: \"Campaign Name\",\r\n        key: \"name\",\r\n        dataIndex: \"name\",\r\n        ...defaultSearchComponent(this, \"name\"),\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Created At\",\r\n        key: \"createdAt\",\r\n        dataIndex: \"createdAt\",\r\n        render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n        sorter: (a, b) => getDiffInMilliseconds(a.createdAt, b.createdAt),\r\n        sortOrder: sortedInfo.columnKey === \"createdAt\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        width: \"15%\",\r\n      },\r\n    ];\r\n\r\n    if (tableData && tableData.length) {\r\n      columns.splice(\r\n        1,\r\n        0,\r\n        {\r\n          title: \"Sent\",\r\n          key: \"sent\",\r\n          dataIndex: \"sent\",\r\n          render: (val, record) => record.analytics.sent,\r\n          align: \"center\",\r\n          //  width: \"5%\",\r\n        },\r\n        {\r\n          title: \"Delivered\",\r\n          key: \"delivered\",\r\n          render: (val, record) => record.analytics.delivered,\r\n          dataIndex: \"delivered\",\r\n          align: \"center\",\r\n          //  width: \"8%\",\r\n        },\r\n        {\r\n          title: \"Bounced\",\r\n          key: \"bounced\",\r\n          dataIndex: \"bounced\",\r\n          render: (val, record) => record.analytics.bounced,\r\n          align: \"center\",\r\n          // width: \"8%\",\r\n        },\r\n        {\r\n          title: \"Opened\",\r\n          key: \"open\",\r\n          dataIndex: \"open\",\r\n          render: (val, record) => record.analytics.open,\r\n          align: \"center\",\r\n          //  width: \"8%\",\r\n        }\r\n      );\r\n      columns.push({\r\n        title: \"Actions\",\r\n        key: \"actions\",\r\n        dataIndex: \"actions\",\r\n        width: \"10%\",\r\n        fixed: \"right\",\r\n        align: \"center\",\r\n        render: (val, record) => (\r\n          <Link to={`/campaigns/${record._id}`}>Manage</Link>\r\n        ),\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.onSelectedRowsDelete}\r\n              disabled={!hasSelected}\r\n              danger\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <span style={{ marginLeft: \"8px\" }}>\r\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : \"\"}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => this.handleSearchReset(this.clearSearchFilters)}\r\n            >\r\n              Clear Filters\r\n            </Button>\r\n            <Button onClick={() => this.setState({ sortedInfo: {} })}>\r\n              Clear Sorters\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table\r\n          scroll={{ x: true, y: 600 }}\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          dataSource={tableData}\r\n          pagination={{\r\n            showSizeChanger: true,\r\n            onChange: this.onPaginationChange,\r\n            total,\r\n            pageSizeOptions: [5, 10, 20, 50],\r\n            defaultPageSize: 5,\r\n            current: pageNo,\r\n          }}\r\n          onChange={this.handleChange}\r\n          loading={onLoading}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ campaigns }, ownProps) => {\r\n  return {\r\n    ...ownProps,\r\n    tableData: campaigns.data,\r\n    total: campaigns.total,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  fetchCampaigns,\r\n  deleteCampaigns,\r\n  clearCampaigns,\r\n})(withRouter(CampaignsTable));\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport { Chart, LineAdvance } from \"bizcharts\";\r\n\r\nimport { getUserAnalytics } from \"../../actions/analyticsActions\";\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nconst Analytics = () => {\r\n  const dispatch = useDispatch();\r\n  const userAnalyticsData = useSelector((state) => state.analytics) || [];\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserAnalytics(\"month\"));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Chart\r\n      padding={[10, 20, 50, 40]}\r\n      autoFit\r\n      height={270}\r\n      data={getChartdata(userAnalyticsData)}\r\n    >\r\n      <LineAdvance shape=\"straight\" point position=\"x*y\" color=\"type\" />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nfunction getChartdata(userAnalyticsData) {\r\n  const data = [];\r\n  const visited = months.map(() => false);\r\n\r\n  userAnalyticsData.forEach(({ _id: { monthNo } }) => {\r\n    visited[monthNo - 1] = true;\r\n  });\r\n  let i = 0;\r\n  userAnalyticsData.forEach(\r\n    ({ _id: { monthNo }, sent, delivered, bounced }) => {\r\n      data.push({ type: \"sent\", y: sent, x: months[monthNo - 1] });\r\n      data.push({ type: \"delivered\", y: delivered, x: months[monthNo - 1] });\r\n      data.push({ type: \"bounced\", y: bounced, x: months[monthNo - 1] });\r\n      if (monthNo < 12)\r\n        for (i = monthNo; i < months.length; i++) {\r\n          if (visited[i]) break;\r\n          data.push({ type: \"sent\", y: 0, x: months[i] });\r\n          data.push({ type: \"delivered\", y: 0, x: months[i] });\r\n          data.push({ type: \"bounced\", y: 0, x: months[i] });\r\n          visited[i] = true;\r\n        }\r\n    }\r\n  );\r\n  for (; i < months.length; i++) {\r\n    if (visited[i]) break;\r\n    data.push({ type: \"sent\", y: 0, x: months[i] });\r\n    data.push({ type: \"delivered\", y: 0, x: months[i] });\r\n    data.push({ type: \"bounced\", y: 0, x: months[i] });\r\n    visited[i] = true;\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nexport default Analytics;\r\n","import axios from \"../config/axios\";\r\nimport { FETCH_ANALYTICS } from \".\";\r\n\r\nexport const getUserAnalytics = (groupBy) => async (dispatch) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/api/analytics${groupBy && groupBy.length ? `?groupBy=${groupBy}` : \"\"}`\r\n    );\r\n\r\n    dispatch({ type: FETCH_ANALYTICS, payload: response.data });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { PageHeader, Divider } from \"antd\";\r\n\r\nimport CampaignTable from \"../../components/Campaigns/CampaignTable\";\r\nimport Analytics from \"../../components/Campaigns/Analytics\";\r\n\r\nconst ManageCampaign = () => {\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Manage Campaigns\"\r\n        subTitle=\"Manage your campaigns here\"\r\n      />\r\n      <Divider />\r\n      <CampaignTable />\r\n      <Analytics />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageCampaign;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Divider,\r\n  Button,\r\n  Tag,\r\n  Card,\r\n  Typography,\r\n  PageHeader,\r\n  message,\r\n  Modal,\r\n  Input,\r\n  Spin,\r\n  Tooltip,\r\n} from \"antd\";\r\nimport { MailTwoTone, EditTwoTone } from \"@ant-design/icons\";\r\n//import _ from \"lodash\";\r\n\r\nimport { fetchCampaigns, clearCampaigns } from \"../../actions/campaignActions\";\r\nimport { fetchTemplates, clearTemplates } from \"../../actions/templateActions\";\r\nimport { fetchUserLists, clearUserLists } from \"../../actions/listActions\";\r\nimport { sendEmails } from \"../../actions/campaignActions\";\r\nimport { regularExpressions } from \"../../utils/static_vars\";\r\n\r\nimport \"./campaign.css\";\r\n\r\nconst CampaignDetail = (props) => {\r\n  const campaignID = props.match.params.id;\r\n  const campaign = useSelector((state) =>\r\n    state.campaigns.data ? state.campaigns.data[0] : null\r\n  );\r\n  const template = useSelector((state) =>\r\n    state.templates.data ? state.templates.data[0] : null\r\n  );\r\n  const list = useSelector((state) =>\r\n    state.userLists.data ? state.userLists.data[0] : null\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  const [isCampaignLoading, setIsCampaignLoading] = useState(false);\r\n  const [isTemplateLoading, setIsTemplateLoading] = useState(false);\r\n  const [isListLoading, setIsListLoading] = useState(false);\r\n  const [isSendEmailsLoading, setIsSendEmailsLoading] = useState(false);\r\n  const [isSendTestEmailLoading, setIsSendTestEmailLoading] = useState(false);\r\n  const [testModalVisible, setTestModalVisible] = useState(false);\r\n  const [testEmail, setTestEmail] = useState();\r\n\r\n  const fetchTemplatesCallback = () => {\r\n    setIsTemplateLoading(false);\r\n  };\r\n\r\n  const fetchUserListsCallback = () => {\r\n    setIsListLoading(false);\r\n  };\r\n\r\n  const fetchCampaignsCallback = () => {\r\n    setIsCampaignLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsCampaignLoading(true);\r\n    dispatch(\r\n      fetchCampaigns({\r\n        filters: { _id: campaignID },\r\n        callback: fetchCampaignsCallback,\r\n      })\r\n    );\r\n\r\n    return () => {\r\n      dispatch(clearCampaigns());\r\n      dispatch(clearTemplates());\r\n      dispatch(clearUserLists());\r\n    };\r\n  }, [dispatch, campaignID]);\r\n\r\n  useEffect(() => {\r\n    if (!campaign) return;\r\n\r\n    setIsListLoading(true);\r\n    setIsTemplateLoading(true);\r\n    dispatch(\r\n      fetchTemplates({\r\n        filters: { _id: campaign.templateID },\r\n        callback: fetchTemplatesCallback,\r\n      })\r\n    );\r\n    dispatch(\r\n      fetchUserLists({\r\n        filters: { _id: campaign.listID },\r\n        callback: fetchUserListsCallback,\r\n      })\r\n    );\r\n  }, [campaign, dispatch]);\r\n\r\n  const onSuccess = (data) => {\r\n    setIsSendEmailsLoading(false);\r\n    setIsSendTestEmailLoading(false);\r\n    setTestModalVisible(false);\r\n    message.success(\"Email(s) sent successfully\");\r\n  };\r\n  const onError = (err) => {\r\n    setIsSendEmailsLoading(false);\r\n    setIsSendTestEmailLoading(false);\r\n    if (err && err.response) message.error(err.response.data.error);\r\n    else message.error(\"Some error occured\");\r\n  };\r\n\r\n  const onSendEmails = () => {\r\n    if (!list) return message.error(\"No List Attached\");\r\n    setIsSendEmailsLoading(true);\r\n    dispatch(\r\n      sendEmails({\r\n        body: {\r\n          listID: campaign.listID,\r\n          campaignID: campaign._id,\r\n          templateID: campaign.templateID,\r\n        },\r\n        onSuccess,\r\n        onError,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSendTestEmail = () => {\r\n    if (!regularExpressions.emailValidator.test(testEmail))\r\n      return message.error(\"Invalid Email\");\r\n    setIsSendTestEmailLoading(true);\r\n\r\n    dispatch(\r\n      sendEmails({\r\n        body: { to: testEmail, templateID: campaign.templateID },\r\n        onSuccess,\r\n        onError,\r\n      })\r\n    );\r\n  };\r\n\r\n  const showModal = () => {\r\n    setTestModalVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onSendTestEmail();\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTestModalVisible(false);\r\n  };\r\n\r\n  const renderCardTitle = () => {\r\n    return (\r\n      <>\r\n        <Tag color=\"orange\">Subject :</Tag> {template.subject}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderListTitle = () => {\r\n    return (\r\n      <>\r\n        <Tag color=\"#108ee9\">List Attached :</Tag>{\" \"}\r\n        <Link to={`/lists/${list._id}`}> {list.name} </Link>\r\n        <Divider type=\"vertical\" />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderTemplateTitle = () => {\r\n    const record = template;\r\n\r\n    return (\r\n      <>\r\n        <Tag color=\"#108ee9\">Template Attached :</Tag>\r\n        <Link to={`/templates/${record._id}`}>{template.name}</Link>\r\n        <Divider type=\"vertical\" />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const TestMailModal = (\r\n    <Modal\r\n      title=\"Send Test Email\"\r\n      visible={testModalVisible}\r\n      footer={[\r\n        <Button key=\"back\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>,\r\n        <Button\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          loading={isSendTestEmailLoading}\r\n          onClick={handleOk}\r\n        >\r\n          Submit\r\n        </Button>,\r\n      ]}\r\n      destroyOnClose\r\n      closable={false}\r\n    >\r\n      <Input\r\n        prefix={<MailTwoTone />}\r\n        onChange={(e) => setTestEmail(e.target.value)}\r\n        placeholder=\" E-mail\"\r\n        allowClear\r\n      />\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Campaign Details\"\r\n        subTitle=\"view and send your campaign\"\r\n        onBack={() => props.history.goBack()}\r\n      />\r\n      <Divider />\r\n      <Spin spinning={isCampaignLoading || isTemplateLoading || isListLoading}>\r\n        {isCampaignLoading || isTemplateLoading || isListLoading\r\n          ? null\r\n          : template && (\r\n              <div\r\n                style={{\r\n                  background: \"white\",\r\n                  padding: \"20px\",\r\n                  fontSize: \"1rem\",\r\n                }}\r\n              >\r\n                <h2>\r\n                  {campaign && campaign.name}{\" \"}\r\n                  <Link to={`/campaigns/${campaignID}/edit`}>\r\n                    <Tooltip placement=\"right\" title=\"Edit\" color=\"blue\">\r\n                      <EditTwoTone style={{ fontSize: \"large\" }} />\r\n                    </Tooltip>\r\n                  </Link>\r\n                </h2>\r\n\r\n                <div>\r\n                  {list && renderListTitle()}\r\n                  {template && renderTemplateTitle()}\r\n                </div>\r\n\r\n                <p>\r\n                  <Tag color=\"#87d068\">From :</Tag>\r\n                  {template.fromName}\r\n                  <Typography.Link>\r\n                    {\" \"}\r\n                    {`<${template.fromEmail}>`}{\" \"}\r\n                  </Typography.Link>\r\n                </p>\r\n\r\n                <Card title={renderCardTitle()}>\r\n                  {template.bodyType === 1 ? (\r\n                    <div\r\n                      contentEditable=\"false\"\r\n                      dangerouslySetInnerHTML={{ __html: template.body }}\r\n                    />\r\n                  ) : (\r\n                    template.body\r\n                  )}\r\n                </Card>\r\n\r\n                <div className=\"card-footer\">\r\n                  <div>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={onSendEmails}\r\n                      loading={isSendEmailsLoading}\r\n                    >\r\n                      Send Emails\r\n                    </Button>\r\n\r\n                    {TestMailModal}\r\n                    <Button type=\"secondary\" onClick={showModal}>\r\n                      Send Test Email\r\n                    </Button>\r\n                  </div>\r\n                  <div>{/* for future add on buttons */}</div>\r\n                </div>\r\n              </div>\r\n            )}\r\n      </Spin>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CampaignDetail;\r\n","var bcrypt = require(\"bcryptjs\");\r\n\r\nexport async function hashCrypt(text) {\r\n  const salt = await bcrypt.genSalt(8);\r\n  return bcrypt.hash(text, salt, null);\r\n}\r\n","import axios from \"../config/axios\";\r\nimport { FETCH_USERS, CLEAR_USERS } from \".\";\r\n\r\nexport const createUser = (args = {}) => async () => {\r\n  const { data, onSuccess, onError } = args;\r\n  try {\r\n    const response = await axios.post(\"/api/user/\", data);\r\n    if (onSuccess) onSuccess(response.data);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error.response.data);\r\n  }\r\n};\r\n\r\nexport const getUsers = (args = {}) => async (dispatch) => {\r\n  const { filters, pagination, callback } = args;\r\n  try {\r\n    const response = await axios.get(\"/api/user/\", {\r\n      params: { filters, pagination },\r\n    });\r\n    if (callback) callback();\r\n    dispatch({ type: FETCH_USERS, payload: response.data });\r\n  } catch (error) {\r\n    console.log({ error });\r\n  }\r\n};\r\n\r\nexport const editUser = (args = {}) => async (dispatch) => {\r\n  const { userID, payload, onError, onSuccess } = args;\r\n  try {\r\n    const response = await axios.patch(`/api/user/${userID}`, payload);\r\n    if (onSuccess) onSuccess(response.data);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error.response.data);\r\n  }\r\n};\r\n\r\nexport const deleteUsers = (args = {}) => async (dispatch) => {\r\n  const { data, onSuccess, onError, filters, pagination } = args;\r\n  try {\r\n    const response = await axios.delete(\"/api/user/\", {\r\n      params: data,\r\n    });\r\n    if (onSuccess) onSuccess(response.data);\r\n    if (filters || pagination) getUsers({ filters, pagination })(dispatch);\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error.response.data);\r\n  }\r\n};\r\n\r\nexport const clearUsers = () => ({ type: CLEAR_USERS });\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Form, Input, Checkbox, Button, message, Spin } from \"antd\";\r\nimport _ from \"lodash\";\r\n\r\nimport { hashCrypt } from \"../../utils/bcrypt\";\r\nimport { regularExpressions } from \"../../utils/static_vars\";\r\nimport { createUser } from \"../../actions/AccountActions\";\r\n\r\nconst buttonLayout = {\r\n  wrapperCol: {\r\n    xs: { offset: 8 },\r\n    sm: { offset: 8 },\r\n    md: { offset: 10 },\r\n    lg: { offset: 10 },\r\n  },\r\n};\r\n\r\nconst CreateUserForm = () => {\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const [isFormLoading, setIsFormLoading] = useState(false);\r\n\r\n  const onFormSubmit = async (values) => {\r\n    const hashedPassword = await hashCrypt(values.password);\r\n\r\n    const data = {\r\n      ..._.omit(values, \"confirmPassword\"),\r\n      password: hashedPassword,\r\n      role: values.role ? 1 : 2, // 1:admin, 2:normal user\r\n    };\r\n\r\n    const onSuccess = (data) => {\r\n      setIsFormLoading(false);\r\n      message.success(data);\r\n      form.resetFields();\r\n    };\r\n\r\n    const onError = (data) => {\r\n      message.error(data.error);\r\n      setIsFormLoading(false);\r\n\r\n      form.setFields([\r\n        {\r\n          name: data.field,\r\n          errors: [data.error],\r\n        },\r\n      ]);\r\n    };\r\n\r\n    dispatch(createUser({ data, onSuccess, onError }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"60%\" }}>\r\n      <Spin spinning={isFormLoading}>\r\n        <Form\r\n          style={{ background: \"white\", padding: \"2.2rem\" }}\r\n          form={form}\r\n          onFinish={onFormSubmit}\r\n          layout=\"vertical\"\r\n        >\r\n          <Form.Item\r\n            name=\"firstName\"\r\n            label=\"First Name\"\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter First Name\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Enter First Name\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"lastName\"\r\n            label=\"Last Name\"\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter Last Name\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Please enter Last Name\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter Email\",\r\n              },\r\n              {\r\n                pattern: regularExpressions.emailValidator,\r\n                message: \"Please enter a valid email\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder=\"Enter Email\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please Enter password\",\r\n              },\r\n              {\r\n                pattern: regularExpressions.passwordValidator,\r\n                message: \"Password must be atleast of 4 characters\",\r\n              },\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input type=\"password\" placeholder=\"Enter password\" />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            dependencies={[\"password\"]}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\",\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\"Passwords do not match!\");\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input type=\"password\" placeholder=\"Enter password again\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item name=\"role\" valuePropName=\"checked\">\r\n            <Checkbox>Has Admin Rights</Checkbox>\r\n          </Form.Item>\r\n\r\n          <Form.Item {...buttonLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUserForm;\r\n","import React from \"react\";\r\nimport { PageHeader, Divider } from \"antd\";\r\n\r\nimport CreateUserForm from \"../../components/Accounts/CreateUserForm\";\r\n\r\nconst CreateUser = () => {\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Create User\"\r\n        subTitle=\"create new users here\"\r\n      />\r\n      <Divider />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <CreateUserForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Input, message, Button } from \"antd\";\r\nimport { MailTwoTone } from \"@ant-design/icons\";\r\n\r\nimport { deleteUsers, getUsers } from \"../../actions/AccountActions\";\r\nimport { regularExpressions } from \"../../utils/static_vars\";\r\n\r\nconst buttonLayout = {\r\n  wrapperCol: {\r\n    xs: { offset: 8 },\r\n    sm: { offset: 8 },\r\n    md: { offset: 10 },\r\n    lg: { offset: 10 },\r\n  },\r\n};\r\n\r\nconst DeleteUserForm = () => {\r\n  const [form] = Form.useForm();\r\n  const user = useSelector((state) => state.session.user);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onDelete = () => {\r\n    const data = {\r\n      emails: [email],\r\n    };\r\n\r\n    setIsLoading(true);\r\n\r\n    const onSuccess = (data) => {\r\n      setEmail(\"\");\r\n      setIsLoading(false);\r\n      message.success(data);\r\n      form.resetFields();\r\n\r\n      if (user.role === 0) {\r\n        dispatch(getUsers());\r\n      }\r\n    };\r\n\r\n    const onError = (data) => {\r\n      setIsLoading(false);\r\n      message.error(data.error);\r\n    };\r\n\r\n    dispatch(deleteUsers({ data, onSuccess, onError }));\r\n  };\r\n\r\n  const onInputChange = (e) => {\r\n    setEmail(e.target.value);\r\n    form.setFields([\r\n      {\r\n        name: \"email\",\r\n        errors: null,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"60%\" }}>\r\n      <Form\r\n        requiredMark={false}\r\n        style={{\r\n          background: \"white\",\r\n          padding: \"2.2rem\",\r\n        }}\r\n        form={form}\r\n        onFinish={onDelete}\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          validateTrigger=\"onSubmit\"\r\n          rules={[\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (value && value.match(regularExpressions.emailValidator)) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(\"Please enter a valid email\");\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            prefix={<MailTwoTone />}\r\n            onChange={(e) => {\r\n              onInputChange(e);\r\n            }}\r\n            placeholder=\"Enter Email\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item {...buttonLayout}>\r\n          <Button type=\"danger\" loading={isLoading} htmlType=\"submit\">\r\n            Delete\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteUserForm;\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, message, Modal, Input, Form } from \"antd\";\r\nimport { LockTwoTone } from \"@ant-design/icons\";\r\n\r\nimport { hashCrypt } from \"../../utils/bcrypt\";\r\nimport { regularExpressions } from \"../../utils/static_vars\";\r\nimport { editUser } from \"../../actions/AccountActions\";\r\n\r\nconst ChangePasswordModal = (props) => {\r\n  const { ChangePasswordModalVisible, changeParentState, userID } = props;\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const [isFormLoading, setIsFormLoading] = useState(false);\r\n\r\n  const onFormSubmit = async (values) => {\r\n    const hashedPassword = await hashCrypt(values.password);\r\n\r\n    const data = {\r\n      password: hashedPassword,\r\n    };\r\n\r\n    const onSuccess = (data) => {\r\n      setIsFormLoading(false);\r\n      message.success(data);\r\n      changeParentState({\r\n        userID: null,\r\n        ChangePasswordModalVisible: false,\r\n      });\r\n      form.resetFields();\r\n    };\r\n\r\n    const onError = (data) => {\r\n      message.error(data.error);\r\n      setIsFormLoading(false);\r\n\r\n      form.setFields([\r\n        {\r\n          name: data.field,\r\n          errors: [data.error],\r\n        },\r\n      ]);\r\n    };\r\n\r\n    dispatch(editUser({ userID, payload: data, onSuccess, onError }));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    form.resetFields();\r\n    changeParentState({\r\n      userID: null,\r\n      ChangePasswordModalVisible: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Change Password\"\r\n      visible={ChangePasswordModalVisible}\r\n      footer={false}\r\n      destroyOnClose\r\n      closable={false}\r\n    >\r\n      <Form\r\n        style={{ background: \"white\" }}\r\n        form={form}\r\n        onFinish={onFormSubmit}\r\n        layout=\"vertical\"\r\n      >\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please Enter password\",\r\n            },\r\n            {\r\n              pattern: regularExpressions.passwordValidator,\r\n              message: \"Password must be atleast of 4 characters\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input\r\n            type={\"password\"}\r\n            prefix={<LockTwoTone />}\r\n            placeholder=\"Enter password\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"confirmPassword\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(\"Passwords do not match!\");\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input\r\n            type={\"password\"}\r\n            prefix={<LockTwoTone />}\r\n            placeholder=\"Enter password again\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button loading={isFormLoading} type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button key=\"back\" onClick={handleCancel}>\r\n            Cancel\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordModal;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Table, Button, message, Typography, Select } from \"antd\";\r\nimport _ from \"lodash\";\r\n\r\nimport {\r\n  deleteUsers,\r\n  clearUsers,\r\n  getUsers,\r\n  editUser,\r\n} from \"../../actions/AccountActions\";\r\nimport { rolesArray, rolesMapping } from \"../../utils/static_vars\";\r\nimport { getDiffInMilliseconds, parseTimeStamp } from \"../../utils/moment\";\r\nimport ChangePasswordModal from \"./ChangePasswordModal\";\r\n\r\nimport \"./table.css\";\r\n\r\nclass UserTable extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    sortedInfo: {},\r\n    selectedRowKeys: [],\r\n    onLoading: false,\r\n    filters: {},\r\n    pageSize: 5,\r\n    pageNo: 1,\r\n    ChangePasswordModalVisible: false,\r\n    //isRoleChangeLoading: false,\r\n    userID: null,\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.dispatchFetchUsers();\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    const { pageSize, pageNo, searchText } = this.state;\r\n    if (\r\n      !_.isEqual(\r\n        { pageSize, pageNo, searchText },\r\n        {\r\n          pageSize: prevState.pageSize,\r\n          pageNo: prevState.pageNo,\r\n          searchText: prevState.searchText,\r\n        }\r\n      )\r\n    ) {\r\n      this.dispatchFetchUsers();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => this.props.clearUsers();\r\n\r\n  dispatchFetchUsers = (pageDetails) => {\r\n    const { pageSize, pageNo } = pageDetails ? pageDetails : this.state;\r\n    let { filters, searchText } = this.state;\r\n    if (searchText && searchText.length)\r\n      filters.name = {\r\n        $regex: searchText,\r\n        $options: \"$i\",\r\n      };\r\n\r\n    const pagination = { skip: (pageNo - 1) * pageSize, limit: pageSize };\r\n    this.setState({ onLoading: true });\r\n\r\n    const callback = () => {\r\n      this.setState({ onLoading: false });\r\n    };\r\n    this.props.getUsers({ filters, pagination, callback });\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    // confirm();\r\n\r\n    if (selectedKeys[0]) {\r\n      this.setState({\r\n        searchText: selectedKeys[0],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    this.setState({\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  handleSearchReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\", filters: {} });\r\n  };\r\n  onSelectedRowsDelete = () => {\r\n    const { selectedRowKeys, pageSize, pageNo, filters } = this.state;\r\n    const { tableData, deleteUsers } = this.props;\r\n\r\n    const emails =\r\n      selectedRowKeys.map((index) => tableData[index - 1].email) || [];\r\n\r\n    this.setState({ onLoading: true });\r\n\r\n    const onSuccess = (data) => {\r\n      const state = { onLoading: false, selectedRowKeys: [] };\r\n      if (selectedRowKeys.length === tableData.length)\r\n        state.pageNo = pageNo > 1 ? pageNo - 1 : 1;\r\n\r\n      this.setState(state);\r\n      message.success(data);\r\n    };\r\n\r\n    const onError = (err) => {\r\n      this.setState({ onLoading: false });\r\n      message.error(err.response.data.error);\r\n      console.log({ err });\r\n    };\r\n\r\n    const skip =\r\n      ((selectedRowKeys.length === tableData.length\r\n        ? pageNo > 1\r\n          ? pageNo - 1\r\n          : 1\r\n        : pageNo) -\r\n        1) *\r\n      pageSize;\r\n\r\n    const pagination = { skip, limit: pageSize };\r\n    deleteUsers({ data: { emails }, onSuccess, onError, filters, pagination });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => this.setState({ selectedRowKeys });\r\n\r\n  onPaginationChange = (pageNo, pageSize) => {\r\n    this.setState({ pageSize, pageNo });\r\n  };\r\n\r\n  onChangePasswordClick = (userID) => {\r\n    this.setState({\r\n      ChangePasswordModalVisible: true,\r\n      userID,\r\n    });\r\n  };\r\n\r\n  onRoleChange = (role, record) => {\r\n    // this.setState({ isRoleChangeLoading: true });\r\n    const onSuccess = (data) => {\r\n      message.success(data);\r\n      //  this.setState({ isRoleChangeLoading: false });\r\n      this.dispatchFetchUsers();\r\n    };\r\n    const onError = (data) => {\r\n      message.error(data);\r\n      // this.setState({ isRoleChangeLoading: false });\r\n    };\r\n    this.props.editUser({\r\n      userID: record._id,\r\n      payload: { role },\r\n      onSuccess,\r\n      onError,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedRowKeys,\r\n      onLoading,\r\n      pageNo,\r\n      sortedInfo,\r\n      // isRoleChangeLoading,\r\n    } = this.state;\r\n    const { tableData, total, user } = this.props;\r\n\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n\r\n    let columns = [\r\n      {\r\n        title: \"First Name\",\r\n        key: \"firstName\",\r\n        dataIndex: \"firstName\",\r\n      },\r\n      {\r\n        title: \"Last Name\",\r\n        key: \"lastName\",\r\n        dataIndex: \"lastName\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        key: \"email\",\r\n        dataIndex: \"email\",\r\n      },\r\n      {\r\n        title: \"Role\",\r\n        key: \"role\",\r\n        dataIndex: \"role\",\r\n        align: \"center\",\r\n        render: (val, record) => (\r\n          <Select\r\n            onChange={(newVal) => this.onRoleChange(newVal, record)}\r\n            loading={false}\r\n            defaultValue={val}\r\n            style={{ width: \"160px\" }}\r\n            // loading={isRoleChangeLoading}\r\n            disabled={user._id === record._id}\r\n          >\r\n            {rolesArray.map((role, i) => (\r\n              <Select.Option\r\n                value={rolesMapping[role]}\r\n                key={i}\r\n                disabled={rolesMapping[role] === record.role}\r\n              >\r\n                {role}\r\n              </Select.Option>\r\n            ))}\r\n          </Select>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Created At\",\r\n        key: \"createdAt\",\r\n        dataIndex: \"createdAt\",\r\n        render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n        sorter: (a, b) => getDiffInMilliseconds(a.createdAt, b.createdAt),\r\n        sortOrder: sortedInfo.columnKey === \"createdAt\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        width: \"20%\",\r\n      },\r\n      {\r\n        title: \"Updated At\",\r\n        key: \"updatedAt\",\r\n        dataIndex: \"updatedAt\",\r\n        render: (val) => parseTimeStamp(val, \"MMMM Do YYYY, h:mm:ss a\"),\r\n        sorter: (a, b) => getDiffInMilliseconds(a.updatedAt, b.updatedAt),\r\n        sortOrder: sortedInfo.columnKey === \"updatedAt\" && sortedInfo.order,\r\n        ellipsis: true,\r\n        width: \"20%\",\r\n      },\r\n    ];\r\n    if (tableData && tableData.length) {\r\n      columns.push({\r\n        title: \"Actions\",\r\n        key: \"actions\",\r\n        dataIndex: \"actions\",\r\n        fixed: \"right\",\r\n        render: (val, record) => (\r\n          <Typography.Link\r\n            onClick={() => this.onChangePasswordClick(record._id)}\r\n          >\r\n            Change Password\r\n          </Typography.Link>\r\n        ),\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          <div>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.onSelectedRowsDelete}\r\n              disabled={!hasSelected}\r\n              danger\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <span style={{ marginLeft: \"8px\" }}>\r\n              {hasSelected ? `Selected ${selectedRowKeys.length} items` : \"\"}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <Button onClick={() => this.setState({ sortedInfo: {} })}>\r\n              Clear Sorters\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <ChangePasswordModal\r\n          ChangePasswordModalVisible={this.state.ChangePasswordModalVisible}\r\n          changeParentState={(state) => this.setState(state)}\r\n          userID={this.state.userID}\r\n        />\r\n        <Table\r\n          scroll={{ x: true, y: 600 }}\r\n          columns={columns}\r\n          rowSelection={rowSelection}\r\n          tableLayout=\"auto\"\r\n          dataSource={tableData}\r\n          pagination={{\r\n            showSizeChanger: true,\r\n            onChange: this.onPaginationChange,\r\n            total,\r\n            pageSizeOptions: [5, 10, 20, 50],\r\n            defaultPageSize: 5,\r\n            current: pageNo,\r\n          }}\r\n          onChange={this.handleChange}\r\n          loading={onLoading}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ users, session }, ownProps) => {\r\n  return {\r\n    ...ownProps,\r\n    tableData: users.data,\r\n    total: users.total,\r\n    user: session.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  clearUsers,\r\n  deleteUsers,\r\n  getUsers,\r\n  editUser,\r\n})(withRouter(UserTable));\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PageHeader, Divider } from \"antd\";\r\nimport DeleteUserForm from \"../../components/Accounts/DeleteUserForm\";\r\nimport UserTable from \"../../components/Accounts/UserTable\";\r\n\r\nconst ManageUsers = () => {\r\n  const user = useSelector((state) => state.session && state.session.user);\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Delete User\"\r\n        subTitle=\"Delete users here\"\r\n      />\r\n      <Divider />\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <DeleteUserForm />\r\n      </div>\r\n\r\n      {user && user.role === 0 && (\r\n        <>\r\n          <Divider />\r\n          <UserTable />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Row, Col, Input, Typography, Button, Tag, message } from \"antd\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  getUserSettings,\r\n  changeUserSettings,\r\n} from \"../../actions/settingsActions\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst SettingsForm = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUserSettings());\r\n  }, [dispatch]);\r\n\r\n  const settings = useSelector((state) =>\r\n    _.omit(state.settings, [\"userID\", \"_id\", \"__v\"])\r\n  );\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(settings);\r\n  }, [settings, form]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const onSubmit = (values) => {\r\n    if (_.isEqual(values, settings)) return message.info(\"No changes made\");\r\n    setIsLoading(true);\r\n    const onSuccess = (data) => setIsLoading(false);\r\n    const onError = (err) => {\r\n      console.log(err);\r\n      setIsLoading(false);\r\n    };\r\n    dispatch(changeUserSettings({ payload: values, onSuccess, onError }));\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col flex=\"55%\">\r\n        <Form\r\n          layout=\"vertical\"\r\n          form={form}\r\n          style={{ background: \"white\", padding: \"2.2rem\" }}\r\n          onFinish={onSubmit}\r\n        >\r\n          <h2>Mailjet Configuration</h2>\r\n          <Form.Item\r\n            name={\"MailjetUsername\"}\r\n            label={\r\n              <span>\r\n                <h3>\r\n                  Mailjet Username -{\" \"}\r\n                  {!settings.MailjetUsername && (\r\n                    <Tag color=\"#f50\">Not Saved</Tag>\r\n                  )}\r\n                </h3>\r\n                <Text type=\"secondary\">Your Mailjet public key</Text>\r\n              </span>\r\n            }\r\n          >\r\n            <Input placeholder={`Example: zVqHiOr8ClmcbVi3hHn2MZVb6fcW8HXS`} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={\"MailjetPassword\"}\r\n            label={\r\n              <span>\r\n                <h3>\r\n                  Mailjet Password -{\" \"}\r\n                  {!settings.MailjetPassword && (\r\n                    <Tag color=\"#f50\">Not Saved</Tag>\r\n                  )}\r\n                </h3>\r\n                <Text type=\"secondary\">Your Mailjet private key</Text>\r\n              </span>\r\n            }\r\n          >\r\n            <Input placeholder={`Example: zVqHiOr8ClmcbVi3hHn2MZVb6fcW8HXS`} />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button\r\n              type=\"success\"\r\n              htmlType=\"submit\"\r\n              loading={isLoading}\r\n              style={{\r\n                color: \"white\",\r\n                background: \"#52c41a\",\r\n              }}\r\n            >\r\n              Save Settings\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SettingsForm;\r\n","import { FETCH_SETTINGS } from \".\";\r\nimport axios from \"../config/axios\";\r\n\r\nexport const getUserSettings = (args = {}) => async (dispatch) => {\r\n  const { onSuccess, onError } = args;\r\n  try {\r\n    const { data: payload } = await axios.get(\"/api/settings\");\r\n    if (onSuccess) onSuccess(payload);\r\n    dispatch({ type: FETCH_SETTINGS, payload });\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n\r\nexport const changeUserSettings = (args = {}) => async (dispatch) => {\r\n  const { onSuccess, onError, payload } = args;\r\n  try {\r\n    const { data } = await axios.post(\"/api/settings\", payload);\r\n    if (onSuccess) onSuccess(data);\r\n    dispatch({ type: FETCH_SETTINGS, payload });\r\n  } catch (error) {\r\n    console.log({ error });\r\n    if (onError) onError(error);\r\n  }\r\n};\r\n","import { PageHeader, Divider } from \"antd\";\r\nimport SettingsForm from \"../../components/Settings/SettingsForm\";\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <>\r\n      <PageHeader className=\"site-page-header\" title=\"Settings\" />\r\n      <Divider />\r\n      <SettingsForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from \"react\";\r\nimport { PageHeader, Divider } from \"antd\";\r\nimport ListsTable from \"../../components/ListComponents/ManageListTable\";\r\nimport CampaignTable from \"../../components/Campaigns/CampaignTable\";\r\nimport Analytics from \"../../components/Campaigns/Analytics\";\r\n\r\nconst Dashboard = () => {\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        className=\"site-page-header\"\r\n        title=\"Dashboard\"\r\n        subTitle=\"View your Lists, Campaigns & Analytics\"\r\n      />\r\n      <Divider />\r\n      <Analytics />\r\n      <h2>Your Campaigns</h2>\r\n      <Divider />\r\n      <CampaignTable />\r\n      <h2>Your Lists</h2>\r\n      <Divider />\r\n      <ListsTable />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport CreateList from \"./List/CreateList\";\r\nimport ManageList from \"./List/ManageList\";\r\nimport Subscribers from \"./List/Subscribers\";\r\nimport CreateTemplate from \"./Templates/CreateTemplate\";\r\nimport ManageTemplates from \"./Templates/ManageTemplates\";\r\nimport CreateCampaign from \"./Campaigns/CreateCampaign\";\r\nimport ManageCampaign from \"./Campaigns/ManageCampaign\";\r\nimport CampaignDetail from \"./Campaigns/CampaignDetail\";\r\nimport CreateUser from \"./Accounts/CreateUser\";\r\nimport ManageUsers from \"./Accounts/ManageUsers\";\r\nimport Settings from \"./Settings\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\n\r\nconst Content = () => {\r\n  const user = useSelector((state) => state.session.user);\r\n  return (\r\n    <Layout.Content\r\n      className=\"site-layout-background\"\r\n      style={{\r\n        padding: \"1rem\",\r\n        margin: 0,\r\n        minHeight: 280,\r\n      }}\r\n    >\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Dashboard} />\r\n        <Route exact path=\"/lists/create\" component={CreateList} />\r\n        <Route exact path=\"/lists\" component={ManageList} />\r\n        <Route exact path=\"/lists/:id\" component={Subscribers} />\r\n        <Route exact path=\"/templates/create\" component={CreateTemplate} />\r\n        <Route exact path=\"/templates/\" component={ManageTemplates} />\r\n        <Route exact path=\"/templates/:id\" component={CreateTemplate} />\r\n        <Route\r\n          exact\r\n          path=\"/campaigns/create\"\r\n          component={CreateCampaign}\r\n          key={window.location.pathname}\r\n        />\r\n        <Route exact path=\"/campaigns/\" component={ManageCampaign} />\r\n        <Route exact path=\"/campaigns/:id\" component={CampaignDetail} />\r\n        <Route\r\n          exact\r\n          path=\"/campaigns/:id/edit\"\r\n          component={CreateCampaign}\r\n          key={window.location.pathname}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/users/create\"\r\n          component={\r\n            user.role < 2 ? CreateUser : () => <h1>{`401: Not Authorized`}</h1>\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/users/\"\r\n          component={\r\n            user.role < 2 ? ManageUsers : () => <h1>{`401: Not Authorized`}</h1>\r\n          }\r\n        />\r\n        <Route exact path=\"/settings\" component={Settings} />\r\n      </Switch>\r\n    </Layout.Content>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport Header from \"../../components/AppHeader\";\r\nimport SideNav from \"../../components/SideNav/SideNav\";\r\nimport Content from \"../Content\";\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <Layout style={{ minHeight: \"100vh\", width: \"100vw\" }}>\r\n      <Header />\r\n      <Layout style={{ margin: \"80px 0px 0px 0px\" }}>\r\n        <SideNav />\r\n\r\n        <Content />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Spin, message } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\nimport Login from \"./containers/Login\";\r\nimport Home from \"./containers/Home\";\r\nimport { createSession } from \"./actions/sessionActions\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"./app.css\";\r\n\r\nconst App = ({ user, createSession }) => {\r\n  const [isLoading, changeLoadingState] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    const onError = (response) => {\r\n      if (response && typeof response.data === \"string\")\r\n        message.error(response.data);\r\n    };\r\n    if (!user) createSession({ changeLoadingState, onError });\r\n  }, [user, createSession]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Spin\r\n        className=\"spinner\"\r\n        spinning={isLoading}\r\n        indicator={\r\n          <LoadingOutlined style={{ color: \"white\", fontSize: \"4rem\" }} />\r\n        }\r\n      />\r\n\r\n      {!isLoading && (user ? <Home /> : <Login />)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ session: { user } }, ownProps) => ({\r\n  user,\r\n  ...ownProps,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createSession })(App);\r\n","import { LOGIN, LOGOUT } from \"../actions\";\r\n\r\nconst sessionReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      return { ...state, ...action.payload };\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      sessionStorage.removeItem(\"token\");\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sessionReducer;\r\n","import { FETCH_USER_LISTS, LOGOUT, CLEAR_USER_LISTS } from \"../actions\";\r\n\r\nconst userListsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER_LISTS:\r\n      return { ...action.payload };\r\n    case LOGOUT:\r\n    case CLEAR_USER_LISTS:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userListsReducer;\r\n","import { FETCH_SUBSCRIBERS, CLEAR_SUBSCRIBERS, LOGOUT } from \"../actions\";\r\n\r\nconst subscribersListReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_SUBSCRIBERS:\r\n      return { ...action.payload };\r\n    case LOGOUT:\r\n    case CLEAR_SUBSCRIBERS:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default subscribersListReducer;\r\n","import { FETCH_TEMPLATES, LOGOUT, CLEAR_TEMPLATES } from \"../actions/index\";\r\n\r\nconst templatesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_TEMPLATES:\r\n      return { ...action.payload };\r\n    case LOGOUT:\r\n    case CLEAR_TEMPLATES:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default templatesReducer;\r\n","import { FETCH_CAMPAIGNS, LOGOUT, CLEAR_CAMPAIGNS } from \"../actions/index\";\r\n\r\nconst campaignsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CAMPAIGNS:\r\n      return { ...action.payload };\r\n    case LOGOUT:\r\n    case CLEAR_CAMPAIGNS:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default campaignsReducer;\r\n","import { FETCH_SETTINGS, CLEAR_SETTINGS, LOGOUT } from \"../actions\";\r\n\r\nconst settingsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_SETTINGS:\r\n      return { ...action.payload };\r\n    case LOGOUT:\r\n    case CLEAR_SETTINGS:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default settingsReducer;\r\n","import { FETCH_ANALYTICS, CLEAR_ANALYTICS, LOGOUT } from \"../actions/index\";\r\n\r\nconst analyticsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ANALYTICS:\r\n      return [...action.payload];\r\n    case LOGOUT:\r\n    case CLEAR_ANALYTICS:\r\n      return [];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default analyticsReducer;\r\n","import { FETCH_USERS, LOGOUT, CLEAR_USERS } from \"../actions\";\r\n\r\nconst userReducer = (state = { total: 0 }, action) => {\r\n  switch (action.type) {\r\n    case FETCH_USERS:\r\n      return { ...action.payload };\r\n    case LOGOUT:\r\n    case CLEAR_USERS:\r\n      return { total: 0 };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport sessionReducer from \"./sessionReducer\";\r\nimport userListsReducer from \"./userListsReducer\";\r\nimport subscribersReducer from \"./subscribersReducer\";\r\nimport templatesReducer from \"./templatesReducer\";\r\nimport campaignsReducer from \"./campaignsReducer\";\r\nimport settingsReducer from \"./settingsReducer\";\r\nimport analyticsReducer from \"./analyticsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nexport default combineReducers({\r\n  session: sessionReducer,\r\n  userLists: userListsReducer,\r\n  subscribers: subscribersReducer,\r\n  templates: templatesReducer,\r\n  campaigns: campaignsReducer,\r\n  analytics: analyticsReducer,\r\n  settings: settingsReducer,\r\n  users: usersReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst middlewares = [thunk];\r\n\r\nexport default createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./config/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}